{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About ThinkNotes","text":"<p>Everyone of us learn over time- whether it's thru our readings or via practice. While we also sometimes learn from our own mistakes, more often than not, we  learn faster when we acknowledge our own shortcomings, reflect on our mistakes and seek new ideas and solutions.  </p> <p>While it would be great if we could remember knowledge or skills that we  just acquire, the truth is that without regularly reviewing our notes,  our knowledge degrades over time.</p> <p>Taking time to review our notes and reflect on their lessons is not a new idea. Ray Dalio, a thinker on investment philosophy (and billionaire hedge fund manager), said in his book, Principles, pain plus reflection equals progress.  That  makes sense.  </p> <p>This idea is also shared in the technology arena, where a development process called Scrum also advises teams to pause after each development cycle (a 'sprint') and reflect on how processes can be improved.</p> <p>Learn, Record, and Reflect.</p> <p>This is the intent of ThinkNotes.  </p>"},{"location":"2023/lieflat/","title":"Feeling Great","text":"<p>By Pedro Pietri</p> <pre><code>woke up this morning\nfeeling excellent,\npicked up the telephone\ndialed the number of\nmy equal opportunity employer\nto inform him I will not\nbe into work today\nAre you feeling sick?\nthe boss asked me\nNo Sir I replied:\nI am feeling too good\nto report to work today,\nif I feel sick tomorrow\nI will come in early\n</code></pre>"},{"location":"2023/Linux/endeavour/","title":"Endeavour OS","text":""},{"location":"2023/Linux/endeavour/#intro","title":"Intro","text":"<p>Starting in early June of 2023, I began to experiment with Endeavour OS, a flavor of Arch Linux.  Right off the bat, my first impression of this OS was that it  looked quite cool. Its default desktop theme focuses on dark space colors-  which throws off a pretty cool vibe, especially when working at night in the  dark.  </p> <p>However, there have been many unpleasant bugs with the default install.  Below  are the problems I encountered with the initial install. </p>"},{"location":"2023/Linux/endeavour/#wifi","title":"Wifi","text":"<p>The first problem right out of the install was a non-functioninig wifi. It seems that all Linux distributions do not have functioning wifi by default. This is quite exceptional.  Shocking.  This is the year 2023 and Linux OSes still do not have wifis working right after installation!</p> <p>Literally Linux users are expected to install wifi adapter drivers to get their  wifis to work.  In addition, there is a chicken-and-egg problem.  There is no  way to get the driver files for either your wifi card or usb without internet  connectivity.  But for machines stationed far away from the router, this is  quite a problem. </p> <p>After hefting the machine next to the router, some online forum postings advised to download and install the correct wifi driver for my adapter.  To find the  proper driver required, use the lsusb command.  And then use the EndeavourOS package manager tool yay to download and install that driver. </p> <p>A quick look with lsusb shows:</p> <pre><code>lsusb\n\nBus 001 Device 003: ID 0bda:8813 Realtek Semiconductor Corp. RTL8814AU 802.11a/b/g/n/ac Wireless Adapter\n</code></pre> <p>This identified the usb adapter chipset as RTL8814AU.  A follow-up query with yay  shows the name of the driver to install.</p> <pre><code>yay rtl8814au\n\n1 aur/rtl8814au-dkms-git 5.8.5.1.r149.g752d8ea-1 (+23 0.87) (Installed: 5.8.5.1.r162.g0e4c2bf-1)\nRTL8814AU and RTL8813AU chipset driver with firmware v5.8.5.1\n</code></pre> <p>Following the instructions installed the driver and ... success!.  Got wifi.  This circuitous route to obtain wifi was ridiculous- given that it's  2023- when this feature should have been working just 'right-out-of-the-box'. </p>"},{"location":"2023/Linux/endeavour/#sound","title":"Sound","text":"<p>The second annoying problem with EndeavourOS was that no sound came out of the  headset audio jack.  A google revealed a suggestion to update the file /etc/modprobe.d/alsa.conf with the following contents:</p> <pre><code>/etc/modprobe.d/alsa.conf\n\noptions snd-hda-intel model=headset-mode\n</code></pre> <p>With the line inserted into the file, a reboot fixed the sound problem.  This was  both great and not so great.  Why there was a sound problem to begin with and why  fixed the problem- really should not have happened.</p>"},{"location":"2023/Linux/endeavour/#bluetooth","title":"Bluetooth","text":"<p>Next I wanted to connect my wireless keyboard to the PC via bluetooth.  However,  starting Bluetooth manager immediately failed.  The error message showed:</p> <pre><code>Connecting to BlueZ Failed\nBlueZ daemon is not running, Blueman-manager cannot continue.\n</code></pre> <p>That was a mystery.  Another google search advised to start the OS' bluetooth service via the following:</p> <pre><code>sudo systemctl enable bluetooth.service\nsudo systemctl start bluetooth.service\n</code></pre> <p>After that, EndeavourOS' bluetooth manager worked.  That was just plain annoying. Why wasn't bluetooth working out of the box - just didn't make any sense.</p>"},{"location":"2023/Linux/endeavour/#display","title":"Display","text":"<p>My particular home workstation has two displays, a primary widescreen and a  smaller secondary rotated as a vertical e-reader/web browser.  This took some setup in the display manager to save this partciular configuration.  However, with each reboot, the OS lost my display configuration and I'd had to redo the same configuration.  </p> <p>A quick google showed that the tool xrandr sets up configuration commands for the displays.  The command arandr starts up a graphical tool for  configuring displays.  </p> <p>In the end, I used arandr to generate a xrandr command for my display setup  which I then put into my bash startup script- to ensure the OS correctly  configures the displays on each reboot. </p> <p>The xrandr command generated by arandr looks somewhat like this:</p> <pre><code>xrandr --output VGA-1 --mode 1280x1024 -pos 2560x0 --rotate left...\n</code></pre>"},{"location":"2023/Linux/endeavour/#screen-freeze","title":"Screen freeze","text":"<p>After another day or two, I started to notice yet another problem with  EndeavourOS.  Whenever it went into sleep mode, it was impossible to get out  of sleep mode without hard-rebooting the machine.  The screen was frozen. </p> <p>Another query to Dr Google returned with the advice that I should turn off  sleep mode and screen savers.  This worked.  Again, while this quick remedy  prevented the screen freezing up, why this should have failed in the first  place was the real problem. </p>"},{"location":"2023/Linux/endeavour/#yay-failure","title":"Yay failure","text":"<p>Next, I tried to install pandoc, but the installation failed with a download  timeout of the package, hslua-cli.  All previous installations made using yay and pacman succeeded previously, so what was wrong this time? </p> <p>An online post suggested to use pacman with the options -Syu like so:</p> <pre><code>sudo pacman -Syu hslua-cli\n</code></pre> <p>This worked!  Option S forces pacman to update its repository mirrors to  the latest working sources.  Option y downloads a copy of the master package database from the servers listed in pacman.conf.  And Option u  removes unneeded packages.</p> <p>Unfortunately, once I ran pandoc, it reported the library ibHSsafe-0.3.19-2aVM1fCfxX88jnlVeNbd8Q-ghc9.0.2.so was missing.  I found this library was in the package haskell-safe.  Why wasn't this installed along with pandoc if it's a dependency?  I manually installed this package via yay:</p> <pre><code>yay haskell-safe\n</code></pre> <p>Retrying pandoc again, I next hit yet another error: pdfengine not  installed.  That's odd.  Didn't that come along with installing pandoc? I found an online comment to install texlive.  Using yay, I installed texdlive-bin, texlive-core, and other texlive auxilary packages. </p> <p>Finally, after all these installs were done, I was able to convert a markdown file to pdf.  </p>"},{"location":"2023/Linux/endeavour/#summary","title":"Summary","text":"<p>All in all, while EndeavourOS does have its rough edges, its package manager yay and its set of cool desktop themes makes working with it a quiet joy.</p>"},{"location":"about/bio/","title":"Bio","text":"<p>Patrick Leung is a native of Hong Kong, China.  Patrick specialises in building electronic trading engines in C++ and risk analytics in C# for financial firms.</p> <p>Patrick currently resides in Singapore and enjoys the lush forest greenery when not in the office. He also enjoys a good game of table tennis and runs around Bedok Resevoir.</p> <p>Patrick is a graduate of Stuyvesant High School in NYC, the Cooper Union School of Engineering and the Lubin School of Business.</p> <p>Patrick can be reached via twitter @patrickleungwl or via email at patrickleungwl @ gmail.com.</p>"},{"location":"archives/2016/2016-04-02-lky-on-management/","title":"LKY on Management","text":"<p>Wisdom distilled from some of the great visionary Lee Kuan Yew's many speeches- </p>"},{"location":"archives/2016/2016-04-02-lky-on-management/#constantly-innovate","title":"Constantly Innovate","text":"<p>\"Standing still is a sure way to extinction.\"</p> <p>\"We have to move upwards to new niches, find a new path to succeed.  If we succeed, others will later follow our path but first, we must work out that path and be succeessful.  We should not brag about our strategies, especially before they have worked... we must quietly sort our options to test out and implement them.  Some will fail, but the key ones must succeed if we are to stay ahead and be a beacon for progress.\"</p>"},{"location":"archives/2016/2016-04-02-lky-on-management/#on-talent","title":"On Talent","text":"<p>\"I have learned that one high-calibre mind in charge of a Ministry makes the difference between success and failure of a major project.  A top mind, given a task, brings together a group of other able men, organises them into a cohesive team, and away the project goes...\"</p> <p>\"Whenever I had lesser men in charge, the average or slightly above-average, I have had to keep pushing and probing them, to review problems, to identify roadblocks, to suggest solutions, to come back and to discover that less than the best has been achieved.  To be exasperated and, often to be totally frustrated, is the price for not having an able and talented man in charge.\"</p> <p>\"(English financier) Gresham pointed that bad money drives out good money from circulation. Well, bad leaders drive out good men from high positions.\"</p> <p>\"Ability can be assessed fairly accurately by a person's academic record and achievements at work.  Character is not so easily measured.  After some successes but too many failures, I concluded that it was more important, though more difficult, to assess a person's character.\"</p>"},{"location":"archives/2016/2016-04-02-lky-on-management/#on-plateaus","title":"On Plateaus","text":"<p>\"What I fear is complacency.  When things always become better, people tend to want more for less work.\"</p>"},{"location":"archives/2016/2016-04-02-lky-on-management/#deliver-what-you-promise","title":"Deliver What You Promise","text":"<p>\"What you say, you must mean, and what you mean, you must deliver.  I always understate what I intend to do and overachieve.\"</p>"},{"location":"archives/2016/2016-04-02-lky-on-management/#make-sure-every-button-works","title":"Make Sure Every Button Works","text":"<p>\"I want to make sure that every button works and even if you are using it only once in a  while, please make sure every morning that it works.  And if it doesn't when I happen to be around, then somebody is going to be in for a tough time because I do not want sloppiness.\"</p>"},{"location":"archives/2016/2016-04-02-lky-on-management/#free-of-ideology","title":"Free of Ideology","text":"<p>\"If there was one formula for our success, it was that we were constantly studying how to make things work, or how to make them work better.  I was never a prisoner of any theory.  What guided me were reason and reality.  The acid test I applied to every theory or scheme was,  would it work?  This was the golden thread that ran through my years in office.\"</p>"},{"location":"archives/2016/2016-04-03-insprirational-quotes/","title":"Inspirational Quotes","text":""},{"location":"archives/2016/2016-04-03-insprirational-quotes/#the-man-in-the-arena","title":"The Man In The Arena","text":"<p><pre><code>\"It is not the critic who counts; \nnot the man who points out how the strong man stumbles, \nor where the doer of deeds could have done them better.\nThe credit belongs to the man who is actually in the area,\nwhose face is marred by dust and sweat and blood;\nwho strives valiantly; \nwho errs, who comes short again and again,\nbecause there is no effort without error and shortcoming;\nbut who does actually strive to do the deeds;\nwho knows great enthusiams, the great devotions;\nwho spends himself in a worthy cause;\nwho at the best knows in the end the triumph of high achievement,\nand who at the worst, \nif he fails, at least fails while daring greatly,\nso that his place shall never be with those cold and\ntimid souls who neither know victory or defeat.\" \n</code></pre> Thedore Roosevelt</p>"},{"location":"archives/2016/2016-04-03-insprirational-quotes/#no-limits","title":"No Limits","text":"<p> .</p> <p><pre><code>\"If you always put limit on everything you do, \nphysical or anything else it will spread into \nyour work and into your life.  \n\nThere are no limits.\n\nThere are only plateaus, \nand you must not stay there, \nyou must go beyond them.\"\n</code></pre> Bruce Lee</p>"},{"location":"archives/2016/2016-04-03-insprirational-quotes/#never-forget","title":"Never Forget","text":"<p> .</p> <p><pre><code>Absort what is useful.  \nDiscard what is not.  \nAdd what is uniquely your own.\"\n</code></pre> Bruce Lee</p>"},{"location":"archives/2016/2016-04-07-getting-things-done/","title":"Getting Things Done","text":"<p>From the book \"Getting Things Done Secrets\" by Rus Slater- If you want to get on in your career or your home life you will need to get things done.  In the modern world, however, there are lots of different people wanting lots of different things to be done, and you can't do everything for everyone unless you get much better at a number of different things.</p>"},{"location":"archives/2016/2016-04-07-getting-things-done/#knowing-what-things-to-do","title":"Knowing what things to do","text":"<ul> <li> <p>Recognize that everyone only has 86,400 seconds a day.  Use them wisely.  Time waits for no one.</p> </li> <li> <p>Ask for clear instructions.  If someone asks you to do something for them, make sure you are 100% certain about what's required.  Whenever possible, get a written instruction or request- the act of  writing down instructions makes people think more carefully and fully about what they actually want. Try to get the request in as much specific detail as possible.  Getting it right first time is always better than having to come back and do it again. </p> </li> <li> <p>See the relevance of the bigger picture.  Knowing how your tasks relate to the bigger picture helps both you and your boss to organize the workload.</p> </li> <li> <p>Plan for output, not activity.  Aim for specific achievements.  It is very satisfying to see that you have achieved something, rather than just spending time doing something.</p> </li> <li> <p>DREAM to get more done.  Delegate it.  Refuse it.  Escalate it.  Action it.  Make a time for it.</p> </li> <li> <p>Have a personal vision or mission.  Write down your long-term career goals and what you need to do in the medium term to achieve them.</p> </li> <li> <p>Make to-do lists.  </p> </li> <li> <p>Find out how others do it.  It is always worth investigating how others may have done a task in the past.  Then compare it with your task and use your judgement to decide whether to follow a tried and trusted method or to develop a new, better way. </p> </li> <li> <p>Know how to KISS- keep it short and simple.  If you have a choice between a simple and a complex way to do something, always go for the simple way.</p> </li> <li> <p>Look at effort versus payoff.  Judge every task by cost and reward.  Work first on the tasks with the least cost and highest return.  By assessing the ratio of effort to payoff, you ensure that you are doing thing that are worthwhile. </p> </li> <li> <p>Go for quick wins.  A quick win is a personal motivator.  You get to tick something off the to do list, which means you have a little less left to do and something to say you have finished.</p> </li> <li> <p>Learn to say no.  Dont say 'yes' to every request.  If we say yes to every request, one of  two things will happen- either we will end up working 24 hours a day or we will end up letting  people down because we said yes to something we cannot do.</p> </li> </ul>"},{"location":"archives/2016/2016-05-01-sg-math-primary-five-ratio/","title":"Singapore Math Primary 5 Five Ratio Question","text":"<p>As my kid has been progressing through the Singapore school system, I've never been seriously challenged by primary school math until now.  I was embarrassingly stomped by the following question. It took me some time to figure it out.  I've posted the question and answer for everyone's benefit. </p> <p><pre><code>Mr Lee had some red and white paint.  1/3 of the paint was red.  He used \n1/2 of the red paint and 5/6 of the white paint.  In the end, he had\na total of 10 liters of paint left.  How much paint did he have at first?\n</code></pre> This question gave me a real headache until I found a way out.  I've generated the solution  in this pdf here</p>"},{"location":"archives/2016/2016-05-02-sg-math-second_math_question/","title":"Singapore Math Primary 5 Second Math Question","text":"<p>Second challenge question from my kid.  Again it took me some time to work out the problem.  Singapore math questions are rather more like puzzles than math questions.  What practical  value do figuring out who has how many pencils serve in real life?</p> <p>To solve these questions, one needs some basic intelligence and an ample supply of heart- also known as perservence- or grit. Without grit, a weak-minded individual would just give up.  And that's exactly what the Singapore government wants.  Singapore math serves nothing more than to separate  the strong from the weak.  It is a simply a basic sorting tool for this meritocractic society. </p> <p>My kid asked me how can I do my job if I get stomped by a primary school question? First, the Singapore math question to me is more of a logic puzzle than a math question.  And second, no one knows everything.  However, the key point is that we do not stay  stomped.  We use everything in our resources to solve the problem.  We attack the  problem from different angles.  Sooner or later until ceaseless attacks, the solution reveals itself.  We are only defeated if we give up.  </p> <p><pre><code>Kenneth had a total of 576 black and red pens in the ratio 9:7.  After he had given\naway an equal number of each type of pens, the number of black and red pens left was\nin the ratio 7:4.  How many pens did he give away altogether?\n</code></pre> I've generated the solution  in this pdf here</p>"},{"location":"archives/2016/2016-09-11-fifteen-years-on/","title":"Fifteen Years On","text":""},{"location":"archives/2016/2016-09-11-fifteen-years-on/#for-the-public-record","title":"For the Public Record","text":"<p>A quick look at the calendar shows it's that time of the year again.  The date creeps up on you.  This year, however- marks the fifteenth year since that horrible day- a day that's been seared into my memory.  Fifteen years is a great number of years that's passed.  Volumes have already been written to record,  to analyse, and to reflect on what happened that day.  It seems a proper civic duty to add my own recollections of that day from my point of view to the public record.  For this reason- I record the following entry. </p>"},{"location":"archives/2016/2016-09-11-fifteen-years-on/#like-any-other-day","title":"Like Any Other Day","text":"<p>September 11, 2001- was just like any other early autumn day.  I was a young Goldman Sachs programmer heading into work that morning in Lower Manhattan.  I had recently transferred to the electronic trading team and was looking forward to a  day of testing GS's system with Cantor Fitzgerald's eSpeed. </p> <p>I was slightly peeved when the N train I took to work from Brooklyn stopped  without explanation at Pacific Street.  Thinking that it was a usual MTA  malfunction, I walked over to the nearby Atlatnic Street station to transfer to  the uptown 4 train.  This train took me to the Battery Park Bowling Green station- which was only 2 blocks away the offices at 125 Broad Street.  </p> <p>The time was 9:15AM.  I remember the exact time because at that point I was  slightly peeved at being made tardy for work by the failing public transit system.  As I rushed up the station exit  staircase to make up for lost time, a work colleague grabbed me on the shoulder.  He  was heading in the opposite direction on the way down the station staircase.  In  terse words, he told me to go home.  Puzzled, I asked why.  He said- \"Look up. Two planes crashed into the World Trade Center.\" and quickly disappeared down the stairs. </p>"},{"location":"archives/2016/2016-09-11-fifteen-years-on/#look-up","title":"\"Look Up\"","text":"<p>Right at the top of the station exit stairs, I arced my head up and looked straight up Broadway.  Against a cloudless blue sky, I saw huge rising plumes of smoke.  Fortunately, I was a tech enthusiast- and happened to be carrying a digital camera  at the time.  Remember- this was back in 2001- in the era before iPhones and  before iPods.  I took this snapshot- </p> <p></p> <p>Though my colleague had told me what happened, it just didn't register that what he said was real.  In 2001, terrorism was the sort of news event that only happened in the Middle East or Africa.  Even though there was  a WTC bombing in 1994, it was already a forgotten memory.  And because of that,  I did not feel any fear. </p>"},{"location":"archives/2016/2016-09-11-fifteen-years-on/#just-get-to-work","title":"\"Just Get To Work\"","text":"<p>It never occurred to me to leave.  My objective- quite stupefying now looking back- but oddly rational at the time- was to get to work.  It must be  the years of social conditioning that makes someone show up to work even as  the world burns.  </p> <p>I walked two blocks eastward to Goldman Sach's office building at 85 Broad Sreet-  and found a throng of people gathered at the entrance.  It seemed that just about  everyone had come down from the building.  Unbeknownst to me at the time- but I  learned a few days afterwards- my GS colleagues had just witnessed the second  plane crash into the towers and were making their way out of the building as I was trying to make my way in.  Seeing that my efforts to enter the office building would fail, I guessed that my absence from the office  would be excused that day. </p> <p>At around 9:20AM, I took this snapshot of 85 Broad Street. </p> <p></p> <p>At the time, there was no panic in the streets.  People milled about in general  confusion as they planned their next steps. </p> <p>Since there was no way then to get to work- I had no other destination than to walk up Broadway- towards the source of the smoke.  Having a digital camera  available at the time presented an opportunity that further egged me into taking  a closer look at the smoke.   As I made my way past Wall Street along Broadway,  the skyscrapers blocked my view of the towers and I could not imagine what was on fire.</p> <p>At around 9:25AM, I took a third snapshot of the smoke above lower Manattan  office buildings. </p> <p></p>"},{"location":"archives/2016/2016-09-11-fifteen-years-on/#surreal","title":"Surreal","text":"<p>The scene was surreal.  With smoke in the skies, I saw what looked like pieces  of paper floating down from the sky.  As I walked further up Broadway, I finally reached  Liberty Plaza.  This plaza, with a clearing void of any buildings- finally  allowed me to get a good view of the towers.    </p> <p>What I saw dumbstruck me for a second.  I saw a whole section of one tower was on  fire.  I raised my camera for this shot. </p> <p></p> <p>I took another shot with the camera's digitial zoom turned on. </p> <p></p> <p>I wasn't sure what I felt.  It was a sense of disbelief.  Was this all  real?  Even though I was witnessing the horror not more than a few hundred meters away, the whole scene did not feel real.  It could be that I did not feel to be in any immediate danger.  I did not feel the heat from the flames or the  noxious fumes from its smoke.  I did not feel horror- because the strange thing  is that I could not imagine what horror it was to be inside the floors where the  fires were burning.  Adding to the surreality of the moment- were loose leaflets  floating down weightlessly from the sky.  They seem to float for an eternity as  they fluttered earthbound.</p> <p>Then as I ambled around to get a better angle of the view, I saw the second  tower appear from behind the first tower- looking like twin smoke stacks. </p> <p></p> <p>The view from google maps from the exact same angle today looks like this- </p> <p></p> <p>As I walked closer and closer to the towers, I finally met resistance at the  corner of Liberty Plaza and Broadway.  There a few of New York City's finest had  cordoned off the area.  I saw several firetrucks parked nearby- and took another  quick snap facing west. </p> <p></p> <p>With my path westward blocked by the authorities, I continued walking northward up Broadway.  At the corner of Cortland and Broadway, I was able to catch another view of the burning towers.  I took two snaps- </p> <p></p> <p></p> <p>At that point in time, I gazed at the scene for a few minutes- along with a growing throng of onlookers.  Meanwhile, the fire burned away.  I thought that the  fire would be put out all right by the firefighters.  Or the fire would just  burn itself out.  It was just a matter of time.  Any other possibility had not  entered my mind. </p>"},{"location":"archives/2016/2016-09-11-fifteen-years-on/#huge-dust-clouds","title":"Huge Dust Clouds","text":"<p>After staring at the fire for a few minutes- with nothing much else going on,  I thought to walk back to Broad Street for another look.  As I was walking toward Broad Street, I noticed out of the corner of my eye an abnormally huge cloud of  brownish dust in the air.  I wondered where did that dust come from?  It was  only a minute or two afterwards that I thought the dust cloud could've come  from secondary bomb attacks.  I remember reading that was a favorite strategy of terrorists- attack first in one primary location, then as the victims wander out in confusion, attack them again with a secondary explosive device.  </p> <p>I thought this huge dust cloud had come from a second wave of attacks.  It was only then that  I realised someone was trying to kill me.  It got personal at this point.  It was only then that I started to think about leaving the area.  And if there  were secondary explosive devices, I thought the best way out of Lower Manhattan  was by way of the lower east shoreline- near South Street Seaport.  And in the  worst case scenario, if the situation got worse, I coud always jump into the river  to escape any further conflagration. </p>"},{"location":"archives/2016/2016-09-11-fifteen-years-on/#stragglers-going-uptown","title":"Stragglers Going Uptown","text":"<p>I reached South Street- and took several pictures as I walked north.  The first photo, takened at approximately 10:10AM shows the thick haze that just  appeared - where all my previous photos showed clear blue skies.   </p> <p></p> <p>As I walked along, I overheard others say the towers fell down.  I did not  believe it.  I took a look back- and only saw thick haze where the towers should appear.  The thick smoke was so enveloping that I wasn't sure where were the towers. </p> <p></p> <p>Walking further northward, I took another picture of the stragglers- like myself. </p> <p></p>"},{"location":"archives/2016/2016-09-11-fifteen-years-on/#no-sight-of-the-towers","title":"No Sight of The Towers","text":"<p>Once I passed under the shadow of Brooklyn Bridge, I immediately felt more  secure.  It was as if the bridge was a demarcation line between a war zone and everywhere else.  </p> <p>As I reached Pike Street, I slowed down and looked back.  I took several shots and none of them show the towers. </p> <p>The foreground of this photo shows what look a staging area for a squad of  auxillary police. </p> <p></p> <p></p>"},{"location":"archives/2016/2016-09-18-get-through-hard/","title":"Get through hard","text":"<p>To get to easy, you have to get through hard.</p> <p></p>"},{"location":"archives/2016/2016-10-08-the-management-masterclass/","title":"The Management Masterclass","text":"<p>From the book \"The Management Masterclass\" by Emma De Vita-</p> <ul> <li>Authenticity</li> <li>To be authentic is to be real, genuine, trustworthy. An authentic person is true to his or her own character.</li> <li>Sell your differences.</li> <li>Remember your roots.</li> <li>Break the mould.</li> <li>Communicator</li> <li>Make time and take time.</li> <li>Clear you rmind.</li> <li>Give your undivided attention.</li> <li>Don't interrupt.</li> <li>Ask what they mean.</li> <li>Check body language.</li> <li>Keep your opinions to yourself.</li> <li>Check what they really feel.</li> <li>Hear what's not being said.</li> <li>Play back what you've heard.</li> <li>Getting stuff done</li> <li>Decide on just a few things to get done.</li> <li>Slow down- give each task the time it deserves.</li> </ul>"},{"location":"archives/2016/2016-10-09-the-spirit-of-kaizen/","title":"The Spirit of Kaizen","text":"<p>From the book \"The Spirit of Kaizen\" by Robert Maurer-  The key idea from this book on Kaizen is that people are scared by big changes.  Instead of making big changes to fix big problems, make small changes instead.  First, small changes are quick and easy to implement and do not meet resistance by scaring people.  Second, small changes over time is similar to compound interest- the small changes accumulate giant effects.</p> <p>When making a change- there are two basic strategies- innovation and kaizen. Innovation calls for a radical, immediate rethink of the status quo.  Kaizen, on the other hand, asks for nothing other than small, doable steps toward improvement.</p> <p>Continuous improvement says- Look for hundreds of small things you can improve.  Look for improvements on existing jobs with your present equipment.</p> <p>Kaizen says-</p> <ul> <li>Use exiting resources</li> <li>Ask team members to participate</li> <li>Remain alert for problems to solve</li> <li>Look for ways to improve customer service</li> <li>Make very very small steps toward change</li> </ul> <p>Jim Collin's Good To Great says- </p> <p>We kept thinking we shold find the 'one big thing,' the miracle moment that defined breakthrough....But...no matter how dramatic the end reslt, the good-to-great transformation never happened in one fell swoop.  There was no single defining action, no grand program, no one killer innovation, no solitary lucky break, no wrenching revolution.  Good to great comes about by a cumulative process- step by step, action by action, decision by decision, turn by turn of the flywheel- that adds up to sustains and spectacular results.*</p> <p>High-reliability organisations know they cannot afford to play games of secrecy.  Their attention to small mistakes flows from the recognition that human beings, no matter how gifted, are fallible.  Instead of expecting staff members to be perfect, HROs require them to be transparent... If you make a mistake, tell us so that we can prevent a bigger problem.  FIX THE PROBLEM, NOT THE BLAME. </p>"},{"location":"archives/2016/2016-12-08-riskfree-profit-strategies/","title":"Risk-free Profit Strategies","text":"<p>Working in the shadow of traders, I overhear some of their money making strategies.  So yesterday at the Washington Zoo, I spotted a perfect money making opportunity  reminiscent of traders' strategies.  There was a souvenir penny-engraving machine  that presses souvenir pennies for 50 cents plus the one penny.  Next to it was a  machine that makes change for one and five dollar bills.   Given a dollar bill,  the machine returns 4 quarters and 2 pennies.  Given a 5 dollar bill, the machine  returns 20 quarters and 10 pennies. </p> <p> </p> <p>Whoa!!!  That's a mega opportunity the size of a dump truck.  In rates and currency markets, if there is even an opportunity to exploit risk free arbitrages of a  single penny, traders would press this opportunity to the full- using leverage  (borrowed funds via repos). </p> <p>I quickly exchanged two five-dollar bills for a 20 cents risk-free profit.  There  was a small risk that the machine might run out of quarters (liquidity  risk) which would've sunk my profits. </p> <p>However, I lost my hard-earned 20 cents gains immediately when my daughter asked to get a drink from the neighboring soda machine.</p>"},{"location":"archives/2016/2016-12-30-revisting-generic-collections/","title":"Revisiting Generic Collections","text":"<p>Earlier I asked if generic collections were faster than non-generic  collections?  I cooked up a quick test to confirm my suspicions that non-generics were slower because of the work it needs to box primitives and then add the reference to the collection- whereas for generic collections, it just needed to add the primitive to its own memory allocation. </p> <p>But then a colleague asked- how about performance for collections of  objects?  Wouldn't a generic collection do the same as a non-generic collection? Both collections only contain references to objects on the heap- and there should be no difference, right?  I updated my old test to check this  assertion. </p> <pre><code>\ufeffusing System;\nusing System.Collections.Generic;\nusing System.Collections;\n\nnamespace TestGenericCollection\n{\n    class TestGenericListVsArrayList\n    {\n        const int _numItems = 10000000;\n\n        static void TimeArrayListOfObjects()\n        {\n            Console.Out.WriteLine(\"TimeArrayListOfObjects start\");\n\n            DateTime dtInsertStart = DateTime.Now;\n            ArrayList stringList = new ArrayList();\n            for (int i = 0; i &lt; _numItems; i++)\n            {\n                stringList.Add(Convert.ToString(i));\n            }\n\n            DateTime dtReadStart = DateTime.Now;\n            for (int j = 0; j &lt; _numItems; j++)\n            {\n                string retrievedInt = (string)stringList[j];\n                if (j % _numItems/10 == 0)\n                    Console.Out.Write(\".\");\n            }\n\n            ShowStats(dtInsertStart, dtReadStart, \"ArrayListOfObjects\");\n        }\n\n\n        static void TimeArrayListOfPrimitives()\n        {\n            Console.Out.WriteLine(\"TimeArrayListOfPrimitives start\");\n\n            DateTime dtInsertStart = DateTime.Now;\n            ArrayList intList = new ArrayList();\n            for (int i = 0; i &lt; _numItems; i++)\n            {\n                intList.Add(i);\n            }\n\n            DateTime dtReadStart = DateTime.Now;\n            for (int j = 0; j &lt; _numItems; j++)\n            {\n                int retrievedInt = (int)intList[j];\n                if (j % _numItems/10 == 0)\n                    Console.Out.Write(\".\");\n            }\n\n            ShowStats(dtInsertStart, dtReadStart, \"ArrayListOfPrimitives\");      \n        }\n\n\n        static void TimeGenericListOfObjects()\n        {\n            Console.Out.WriteLine(\"TimeGenericListOfObjects start\");\n\n            DateTime dtInsertStart = DateTime.Now;\n            List&lt;string&gt; intList = new List&lt;string&gt;();\n            for (int i = 0; i &lt; _numItems; i++)\n            {\n                intList.Add(Convert.ToString(i));\n            }\n\n            DateTime dtReadStart = DateTime.Now;\n            for (int j = 0; j &lt; _numItems; j++)\n            {\n                string retrievedInt = intList[j];\n                if (j % _numItems/10 == 0)\n                    Console.Out.Write(\".\");\n            }            \n\n            ShowStats(dtInsertStart, dtReadStart, \"GenericListOfObjects\");            \n        }\n\n\n\n        static void TimeGenericListOfPrimitives()\n        {\n            Console.Out.WriteLine(\"TimeGenericListOfPrimitives start\");\n\n            DateTime dtInsertStart = DateTime.Now;\n            List&lt;int&gt; intList = new List&lt;int&gt;();\n            for (int i = 0; i &lt; _numItems; i++)\n            {\n                intList.Add(i);\n            }\n\n            DateTime dtReadStart = DateTime.Now;\n            for (int j = 0; j &lt; _numItems; j++)\n            {\n                int retrievedInt = intList[j];\n                if (j % _numItems / 10 == 0)\n                    Console.Out.Write(\".\");\n            }\n\n            ShowStats(dtInsertStart, dtReadStart, \"GenericListOfPrimitives\");\n        }\n\n\n        /// &lt;summary&gt;\n        /// ShowStats show time procedure took to insert 1M items and to read 1M items\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"dtInsertStart\"&gt;Time when insert started&lt;/param&gt;\n        /// &lt;param name=\"dtReadStart\"&gt;Time when read started&lt;/param&gt;\n        /// &lt;param name=\"msg\"&gt;Name of procedure&lt;/param&gt;\n        static void ShowStats(DateTime dtInsertStart, DateTime dtReadStart, string msg)\n        {\n            DateTime dtTimeNow = DateTime.Now;\n            TimeSpan wholeTime = dtTimeNow.Subtract(dtInsertStart);\n            TimeSpan insertTime = dtReadStart.Subtract(dtInsertStart);\n            TimeSpan readTime = dtTimeNow.Subtract(dtReadStart);\n            Console.Out.WriteLine(\"{3} took {0} ms in total, {1} ms to insert, {2} to read\\n\",\n                wholeTime.TotalMilliseconds,\n                insertTime.TotalMilliseconds,\n                readTime.TotalMilliseconds,\n                msg);\n        }\n\n\n        static void Main(string[] args)\n        {\n            switch(args[0])\n            {\n                case \"1\": \n                    TimeGenericListOfPrimitives();\n                    break;\n                case \"2\":\n                    TimeGenericListOfObjects();\n                    break;\n                case \"3\":\n                    TimeArrayListOfPrimitives();\n                    break;\n                case \"4\":\n                    TimeArrayListOfObjects();\n                    break;\n            }\n        }\n    }\n}\n</code></pre> <p>The result?</p> <pre><code>&gt;TestGenerics.exe 1\nTimeGenericListOfPrimitives start\n..........\nGenericListOfPrimitives took 358.8006 ms in total, 202.8004 ms to insert, 156.0002 to read\n\n\n&gt;TestGenerics.exe 2\nTimeGenericListOfObjects start\n..........\nGenericListOfObjects took 4336.8077 ms in total, 4180.8074 ms to insert, 156.0003 to read\n\n\n&gt;TestGenerics.exe 3\nTimeArrayListOfPrimitives start\n..........\nArrayListOfPrimitives took 2324.4041 ms in total, 2168.4038 ms to insert, 156.0003 to read\n\n\nTestGenerics.exe 4\nTimeArrayListOfObjects start\n..........\nArrayListOfObjects took 4508.408 ms in total, 4352.4077 ms to insert, 156.0003 to read\n</code></pre> <p>It's fairly conclusive.  </p> <p>For collections of primitives (ints, longs, etc)- generic collections are definitely much faster than non-generic collections- because there is no need to box items.</p> <p>For collections of objects- generic collections show no substantial improvement over non-generic collections. </p>"},{"location":"archives/2017/2017-03-21-timing_numpy/","title":"Timing NumPy","text":"<p>I've been hearing a lot of good things about NumPy and Python- so much so that I've finally had to give it a try.  What's so good about NumPy?  For one thing, its built-in array data structure.  Given that data arrays are one  continous block of memory, referencing numbers directly in arrays would be much faster than referencing them in Python's  built-in lists- which would really be a list of pointers to the real location of data. </p> <pre><code>\ufefffrom timeit import timeit\n\ntest_list_loop = '''\n    alist = [0] * 1000\n    for i in xrange(0, len(alist)): \n        alist[i] += 1\n'''\n\ntest_numpy_arrays = '''\n    a = np.zeros(1000)\n    b = a+1\n'''\n\nprint( timeit( stmt=test_numpy_arrays, setup='import numpy as np',  number=100000 ) )\nprint( timeit( stmt=test_list_loop, number=100000 ) )\n</code></pre> <p>The result?</p> <pre><code>0.680721998215\n7.49408698082\n</code></pre> <p>It's fairly conclusive.  </p> <p>NumPy arrays are 11 times faster than Python lists.  No contest. </p>"},{"location":"archives/2017/2017-04-23-the-tao-of_charlie-munger/","title":"The Tao of Charlie Munger","text":"<p>From the book \"The Tao of Charlie Munger\" by David Clark. </p>"},{"location":"archives/2017/2017-04-23-the-tao-of_charlie-munger/#waiting","title":"Waiting","text":"<p>It's waiting that helps you as an investor, and a lot of people  just can't stand to wait. </p>"},{"location":"archives/2017/2017-04-23-the-tao-of_charlie-munger/#when-to-bet-heavily","title":"When to Bet Heavily","text":"<p>You should remember that good ideas are rare- when the odds are greatly in your favor, bet heavily. </p>"},{"location":"archives/2017/2017-04-23-the-tao-of_charlie-munger/#the-herd","title":"The Herd","text":"<p>Mimicking the herd invites regression to the mean. </p>"},{"location":"archives/2017/2017-06-03-fooled-by-randomness/","title":"Fooled By Randomness","text":"<p>Nassim Tabeb's \"Fooled By Randomness\" is such a great book, I thought I'd save some great passages here. </p>"},{"location":"archives/2017/2017-06-03-fooled-by-randomness/#on-success","title":"On Success","text":"<pre><code>A few years ago, when I told one A, a then Master-of-the-Universe type,\nthat track records were less relevant than he thought, he found the remark \nso offensive that he violently flung his cigarette lighter in my direction.\nThe episode taught me a lot.  Remember that nobody accepts randomness in \nhis own success, only failure.  His ego was pumped up as he was heading up\na department of \"great traders\" who were then temporarily making a fortune\nin the markets and attributing the idea to the sounding of their business,\ntheir insights, or their intelligence.  They subsequently blew up during\nthe harsh New York winter of 1994 (it was the bond market crash that followed\nthe surprise interest rate hike by Alan Greenspan).  The interesting part \nis that several years later I can hardly find any of them still trading \n(ergodicity).\n</code></pre>"},{"location":"archives/2017/2017-06-03-fooled-by-randomness/#on-cycles","title":"On Cycles","text":"<pre><code>Recall that some economists call the rare event a \"peso problem.\"  The\ndesignation peso problem does not appear to be undeservedly stereotypical.\nThings have not gotten better since the early 1980s with the currency of\nthe United States' southern neighbor.  Long periods of stability draw hordes\nof bank currency traders and hedge fund operators to the calm waters of\nthe Mexican peso; they enjoy owning the currency because of the high interest\nrate it commands.  Then they \"unexpectedly\" blow up, lose money for \ninvestors, lose their jobs, and switch careers.  Then a new period of \nstability sets in.  New currency traders come in with no memory of the bad\nevent.  They are drawn to the Mexican peso and the story repeats itself.\n</code></pre>"},{"location":"archives/2017/2017-06-03-fooled-by-randomness/#on-asymmetry","title":"On Asymmetry","text":"<pre><code>I was once asked in one of those meetings to express my views on the stock \nmarket.  I state, not without a modicum of pomp, that I believed that the \nmarket would go slightly up over the next week with a high probability. \nHow high?  \"About 70%\".  Clearly, that was a very strong opinion.  But then\nsomeone interjected.  \"But Nassim, you just boasted being short a very large\nquantity of SP500 futures, making a bet that the market would go down. \nWhat made you change your mind?\" \"I did not change my mind!  I have a lot\nof faith in my bet!  As a matter of fact I now feel like selling even more!\" \nThe other employees in the room seemed utterly confused.  \"Are you bullish\nor are you bearish?\"  I was asked by the strategist.  I replied that I could\nnot understand the words bullish and bearish outside of their purely\nzoological consideration.... my opinion was that the market was more likely\nto go up (\"I would be bullish\"), but that it was preferably to short it \n(\"I would be bearish\"), because, in the event of its going down, it could go\ndown a lot.  Suddently, the few traders in the room understood my opinion \nand started voicing similar opinions.  And I was not forced to come back to\nthe following discussion. \n\nLet us assume that the reader shared my opinion, that the market over the \nnext week had a 70% probability of going up and 30% probability of going down.\nHowever, let us say that it would go up by 1% on average, while it could go\ndown by an average of 10%.  What would the reader do?  Is the reader\nbullish or bearish?\n\nAccordingly, bullish or bearish are terms used by people who do not engage\nin practicing uncertainty, like the television commentators, or those who have\nno experience in handling risk. \n</code></pre>"},{"location":"archives/2017/2017-06-08-python_import/","title":"Imports in Python","text":"<p>What's the difference between: 1) import numpy, 2) import numpy as np, and 3) from numpy import * ?</p> <p>First example:</p> <pre><code>import numpy\n</code></pre> <p>Second example:</p> <pre><code>import numpy as np\n</code></pre> <p>Third example:</p> <pre><code>from numpy import *\n</code></pre> <p>The first example allows usage of all sub-modules and functions in the  numpy module- but they can only be accessed by numpy.method().</p> <p>The second example is the same as the first example- but also sets up np as alias thru which to access the numpy functions- example: np.method().</p> <p>The third example imports all sub-modules and functions from the numpy module into the local namespace.  This allows using numpy's methods without namespace qualifications- example: method().  However, this has the  disadvantage of complicating the local namespace with common method names- and overriding methods with the same names from other modules.</p>"},{"location":"archives/2017/2017-06-11-basic-matplotlib/","title":"Basic Matplotlib Plot","text":"<p>Most data analysts just want to generate a plot quickly with minimal work. However Matplotlib's api has a slight learning curve- and it requires some  investment to pick up on its class hierachies and its terminologies.  I've jotted down some Matplotlib gems here so others users can have less  of a learning curve. </p> <p>One key point to note is that regardless of what commands used to generate plots,  they all devolve into one low level plot method- which is pyplot.subplots().  Exploting this method well is the key to build great looking charts. </p> <p>The Axes class is the main class  to work with for customising the plot type and the x and y axes.  For  working with all other plot elements, we use the  Figure class.  We acquire  pointers (or references) to both the Figure and Axes whenever we call the  pyplot.subplot() method. </p> <p>Sample Matplotlib command usage:</p> Topic Intent Usage Plots Create 2x1 subplots fg, ax = plt.subplots(2, 1, sharex=True) Spines Make top spine invisible ax.spines['top'].set_visible(False) X Ticks Set xtick color, label size, and direction ax.tick_params(axis='y', color='#333333', labelsize='small', direction='in') Styles Use preset plot styles style.style.use('ggplot') Styles See available styles print(plt.style.available) Text Set text at x,y data points ax.text(dates[2], prices[2], 'Example') Text Text with arrow ax.annotate('Dividend',(dates[2],prices[2]), xytext=(0.8, 0.9), textcoords='axes fraction', arrowprops = dict(facecolor='grey',color='grey')) Subplots Create subplots ax = plt.subplot2grid((gx,gy), (x,y), colspan=c) Subplots Create subplots ax = plt.subplot2grid((gx,gy), (x,y), rowspan=r) <p>Sample Matplotlib script:</p> <pre><code>jupyter qtconsole\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nplt.figure()                            # Create a new figure window\nxlist = np.linspace(-2.0, 1.0, 100)     # Create 1-D arrays for x,y dimensions\nylist = np.linspace(-1.0, 2.0, 100)\nX,Y = np.meshgrid(xlist, ylist)         # Create 2-D grid xlist,ylist values\nZ = np.sqrt(X**2 + Y**2)                # Compute function values on the grid\n\nplt.contour(X, Y, Z, [0.5, 1.0, 1.2, 1.5], colors = \u2019k\u2019, linestyles = \u2019solid\u2019)\nplt.show()\n</code></pre> <p></p>"},{"location":"archives/2017/2017-06-24-the-effective-engineer/","title":"The Effective Engineer","text":"<p>Just read \"The Effective Engineer\" by Edmond Lau.  For those who have no  time to read, I've simplified the book to 11 bullet points below. </p> <ul> <li>Increase your leverage by focusing on high impact activities and  completing activities quicker.</li> <li>Learning is like compound interest.  Steadily acquiring small bits of  knowledge over time accumulates to a mountain of knowledge. </li> <li>Prioritize regularly- differentiate between urgent vs important.</li> <li>Invest in iteration speed- with continuous testing and small incremental changes.</li> <li>Invest in time saving tools. </li> <li>Use metrics to drive progress.</li> <li>Validate ideas via feedbacks early and often.</li> <li>Test your ideas with automated tests. </li> <li>Relentless automate repetitive tasks. </li> <li>Invest in team's growth. </li> <li>Build the simplest system possible.</li> </ul>"},{"location":"archives/2017/2017-09-03-managing/","title":"Managing, by Harold Geneen","text":"<p>Harold Geneen was a longtime CEO of ITT, a huge conglomerate.  His book, concisely named 'Managing', details his thoughts on running a business. </p> <p>I've jotted down some main more important points from his point- for long term reference. </p>"},{"location":"archives/2017/2017-09-03-managing/#management-theories","title":"Management Theories","text":"<pre><code>...No Theory X, Y, or Z will give us simple answers to complex problems...\nThe men and women with whom I have worked have been whole, rounded, complex\npersons with a wide variety of good and bad qualities.  I could never fit \nthem into any convenient psychological pigeonhole.  The only way I knew how to\njudge people at ITT was by the test of performance....\nAll the computers, reports, surveys, and staff analyses provied us with only\none thing: Information- factural information and sometimes, misinformation.\nWhen it came time to make a decision, I would ask one, two or several people,\n\"What do you think?\"  From the interchange of ideas, one sparking the other,\nbased upon the facts at hand, we would reach a decision, for better or worse.\nWe learned as we went along; our bank of experience grew richer; we became \nquickerand more sophisticated in handling more complex problems; we became\nmore self-confident of our abilities.  But we never reduced the art of \nmanagement to a formula.  We could never be sure we were right on any one,\nspecific decison. \n</code></pre> <pre><code>Many people, young and old, have asked me from time to time for the secret\nof my success in business.  Usually I avoided giving any answer.  Now I can \nreveal it- The secret of how to succeed in business or in life is that there is \nno secret.  No secret at all.  No formula.  No theory. \n</code></pre> <pre><code>A Three Sentence Course on Business Management- You read a book from the\nbeginning to the end.  You run a business the opposite way.  You start with\nthe end, and then you do everything you mut to reach it.\n\nYou decide what it is that you want to do, then you start doing it. \n</code></pre>"},{"location":"archives/2017/2017-09-03-managing/#selling","title":"Selling","text":"<pre><code>Never make your sales pitch right away.  Offer the client a cigarette, sit\ndown, and talk to him about the advantages of your product.  Listen to \nwhat he says.  Don't interrupt him.  Pick out his main objection or doubt\nand focus your sales talk on that.  Finally, before you leave, don't forget\nto ask for the order.\n</code></pre>"},{"location":"archives/2017/2017-09-03-managing/#departing","title":"Departing","text":"<pre><code>Strong doubts and misgivings besieged me right up to the evening that I left\nthe plant.  It had been my first real postwar job, a happy, good place to\nwork, with responsibilities that had challenged my abilities.  Looking back \nfrom the parking lot to the light still buring in my office, I wondered\nwhether or not I should turn back.  But I could not turn back.  No one can \nturn back, not successfully.  One makes a decision to go forward, for better\nor worse, and you go forward, with the feeling and faith that if you succeed\nat one task, you have every reason to believe you will succeed at your next, \nbigger one.  There are no guarantees, of course, but the risk must be taken,\nif you are going to live with yourself thereafter.\n</code></pre>"},{"location":"archives/2017/2017-09-03-managing/#solving-problems","title":"Solving Problems","text":"<pre><code>One by one, we would go through each of the monthly reports.  Not only I \nbut anyone else at the meeting could say anything, question anything, \nsuggest anything that was pertinent... With the figures on the screen, \nwe could all see how each profit center measured up to its budget commitments,\nits last year's performance and wahterver, in sales, earnings, etc...\nWhen problems arose, as they always did, we could deal with them and \nperhaps even solve them on the spot... Often, we would deal with a problem\nof one company that was similar to if not a replica of a problem faced by \nseveral other companies.  Men learned by learning to the woes of others.\nIt was at times almost group therapy.  Often, the manager of one company \ncould suggest a solution that worked for him that would help another manager\nwith a similar problem in his company... I asked questions based upon the notes\nI had made on their monthly operating reports.  Why were the sales down? \nWas he sure of the reasons?  Had he checked it out?  How?  What was he doing\nabout it?  What did he expect in the month or two ahread?  Did he need help?\nHow did he plan to meet or outdistance the competition?\n\nOftentimes, as we explored a situation, we found that the reason for a \nproblem was not as expected, but something entirely different.  I did not \ncome to those meetings with all the answers.  We explored and we tested out\nalternatives.  The minds of many men dealt with the problem at hand.  When\nI felt the man needed help, I assigned a team of staff man to help him. \nAnd I explained that we were all there to help the man in trouble; we were\nall one team, one company, and I was interested in solving the problem at\nhand, not taking action against the man personally. \n</code></pre> <pre><code>I brought this point home at a General Managers Meeting early in my reign\nat ITT when the man in charge of our Latin America operations reported that\nhe had failed to sell our newest, multimillion-dollar telephone switching\nsystem to the government of Brazil.  I probed for quite a while into the \nefforts that had been made, the presentation given, the facts of the\nsituation.  He told me of all the avenues he had explored.\n\n\"Who makes the final decision there on whether or not they buy our system\", \nI asked. \n\n\"President Kubitschek.\" \n\n\"Did you see him?\"\n\n\"No.\"\n\n\"Why not?\"\n\n\"Because... really makes the decision.  He recommends the decision and \nthe President follows his advice,\" he explained, adding, \"Besides, I don't \nthink I can get in to see Kubitschek.\" \n\n\"Well, why don't you try?  You have everything to gain and nothing to lose.\"\n\nThe following month, he returned to announce with a sheepish grin on his \nface that he had seen the President of Brazil and had sold the ITT system. \nIt went over quite big.  The men in the room applauded him. \n</code></pre> <pre><code>Experience has taught me what I came to call the inverse ratio of time to \nveracity.  It has long seemed to me that the lower you are in the corporate\nhiearchy, the more time you have to verify the facts upon which you were\nacting... and the higher you rise and the greater your responsibilities, \nthe less time you have to check your facts, and the more important it is to\ndo so.\n</code></pre>"},{"location":"archives/2017/2017-09-03-managing/#leadership","title":"Leadership","text":"<pre><code>Leadership is the ability to inspire other people to work together as a team,\nfollowing your lead, in order to attain a common objective, whether in \nbusiness, in politics, in war, or on the football field.  No one can do it \nalone.  Others must want to follow the lader.  I don't particularly subscribe\nto the theory that there are natural born leaders.  Leadership is learned, \nalthough I cannot explain entirely how it is learned.  The ability to lead\nand inspire others is far more instintual than premeditated and it is acquired\nsomehow through the experiences of one's everyday life, and the ultimate\nnature and quality of that leadership comes out of the innate character and\npersonality of the leader himself. \n</code></pre> <pre><code>I wanted to create that kind of invigorating, challenging, creative \natmosphere at ITT.  I wanted to get the people there to reach for goals \nthat they might think were beyond them.  I wanted them to accomplish more \nthan they thought were possible.  And I wanted them to do it not only for\nthe company and their careers but also for the fun of it.  I wanted them \nto enjoy the process of tackling a different piece of business, solving it, \nand going on to bigger, better, and tougher challenges.  I wanted them to \ndo this, not for self-aggrandizement, but s part of a greater team effort,\nin which each player realised his own contribution to the team, knew that\nhe was needed and appreciated, and took pride and self-satisfaction from \nplaying a winner game.  My job as a chief executive, as I saw it, was to \nunlock wahtever inhibitions or fears bound these people in chains of \ninsecurity.  The way to do that was to create at ITT a climate of growth\nand opportunity, a climate in which each fellow would want to carry his \nown share, and would be driven to excel not only because I pushed him \nbut because of peer pressure and pride.\n\nThe best hope of achieving that, given my own sense of leadership, was\nto jump in the boat, grab an oar, and start pulling along with the other\nmen.  I suppose you might call it participatory leadership.  I didn't want\nto be the captain sitting in the back of the boat, exhorting his men to do\nall the work while he sat there doing nothing.  Nor did I want to be like\nthe master of a galley, frightening his slaves half to death with the giant\nwhip in his hands.  I worked as long and as hard as any man at ITT and they\nknew it...I did set an example, an honest example, which traveled down \nthe ranks of management and, to an extent, established a standard of \nperformance for the whole company.  After all, if I could do it, so could the\nnext man- if he had any measure of pride in his own ability.\n</code></pre> <pre><code>The person who heads a company should realise that his people are not\nreally working for himl they are working with him for themselves. \nThey have their own dreams, their own need for self-fulfillment.  He has\nto help fill their needs as much as they do his.  He has to prove to them \nthat he is working as hard as they are, that he is competent in his role \nas chief executive, that he will not lead them over the cliff and jeapedise\ntheir livelihoods, they he can be relied upon to reward them properly \nand fairly, that he is willing to share the risks as well as the rewards\nof their enterprise.\n</code></pre>"},{"location":"archives/2017/2017-09-03-managing/#meetings","title":"Meetings","text":"<pre><code>We cut through layers of fat in our management ranks by putting all the \npeople in one room so they could talk with one another, face to face, \nregardless of rank, and an honest assessment of any situation could be based\nupon the facts which emerged...People could disagree with me or with anyone\nelse... I tried to welcome criticism.  Naturally, no one likes to be \ncriticized.  One's first instinct is to be defensive and fight back.  But\nthat is the kind of defensiveness one should try to keep under control...\nI always wanted someone to point out where I might be heading for a mistake.\nI never batted down such a man.  I listened and we exchanged views. \nSometimes I was clearly wrong; sometimes he was mistaken.  Not infrequently,\nit was a little of both.  Almost always new facts and new ideas emerged and \nour exchange would reveal a better course of action which neither of us \nhad envisioned before... Being open to criticism usually pays unexpected \ndividends.  People were free to come to me or to anyone else and ask \nhonestly for help, and they would get it, again without fear of diminution of\nstatus, rank or whatever.  We were all in the same lifeboat, all pulling\ntoward a single goal.  That was our underlying philosophy.\n</code></pre>"},{"location":"archives/2017/2017-09-03-managing/#delegating","title":"Delegating","text":"<pre><code>...He delegates this and he delegates that.  He delegates just about everything\nhe can, saying that his shop is well organized and that he runs a tight ship.\nBut I have to ask- Organized for what?  Tight in what way?\n\nIf he delegates everything that crosses his desk (and leaves it clean), has he\nnot reduced his function o that of a traffic cop?  What he is really doing, \nwhether or not he realizes it, is directing the flow of paper and giving the\ngo-ahead or stop signal to decisions made by others.  There is nothing wrong\nwith being a traffic cop, but should he be paid the salary of a top corporate\nexecutive?  One can hire a business administrator at a fraction of the salary\nand bonuses paid to top management. \n\nThe real danger in turning over responsbility and authority for a job, without\nknowing the details of what is involved, is that the manager who receives the\nresponsibility might fail.  If that happens, the chief executive does not know\nenough to resuce the situation.  All he can do is to hire someone else to do\nthe job.  Therefore, beneath the facade of his title, the size of office, and\nthe quality of his desk, is he incompetent.\n\nOn the other hand, if all his vice presidents do their own jobs superbly, \nit won't be long before someone discovers that they don't need him as the \nchief executive at all.  Any one of his subordinates would be happy to take\nover.\n</code></pre> <pre><code>More prevalent are the professional money managers who give other reasons \nfor their tidy desk tops.  One type freely admits that he worked hard to get\nto the top and now, presumably safely enscounced, delights in having others\ndo the work for him.  He won't last long, in my estimation, with that false\nsense of security.  Even more prevalent are the men who persuade themselves\nthat they are now above the mundane, nitty-gritty aspects of the day-to-day\nproblems of running the business.  They say they have to keep their desks\nand minds clear for the deeper, long-range strategies that will guide their\ncompanies to new wondrous heights in the world of tomorrow.  They are planning\nfor the future, they say, looking far over the heads of the mere mortals on \nthe operating lines of the company.  They sincerely believe it, too.\n</code></pre>"},{"location":"archives/2017/2017-09-03-managing/#managing","title":"Managing","text":"<pre><code>The key, essential element in all good business management is emotional \nattitude.  The rest is mechanics.  As I use the term, management is not a \ncollection of boxes with names and titles on the organizational chart. \nManagement is a living force.  It is the force that gets things done to \nacceptable standards- high standards.  You either have it in a company or \nyou don't.  Management must have a purpose, a dedication, and that dedication\nmust be an emotional commitment.  It must be built in a vital part of the\npersonality of anyone who is truly a manager.  He or she is the one who \nunderstands that management must mange. \n\nThe attitude is a self-fulfilling one, too.  The man who says, \"I must do \nthis,\" will stay at his task until all hours, trying again and again and \nagain, until he finds a satsifactory answer.  The answer must be, above all,\nsatisfactory to him.  And he will know it.  There may be seventy-eight ways\nto do something and only ten of them with satisfactorily good answers.  The\nmanager will continue to probe and to seek for one of those ten answers. \nIt may not be the best of all answers.  But he won't settle for anything lower\nthan one of those ten.  The next time he will strive for yet a better answer,\nhigher on the list, learning something new all the time, and achieving better\nresults as he goes along.  He will work this way because of his emotional \nattitude, more than anything else, and that attitude inevitably will be \nemulated by those who work with him, so that it becomes a way of life in that\norganization.  The urge to do what must be done is powered by deep-seated\nemotion, not logic.  He might not be able to explain why he works the way \nhe does, or why he makes this choice and not the other one.  He does it because\nhe 'feels' that it is right.  That feeling is transmitted to others who work\nfor him or with him.  They know his emotional commitment includes them as well\nas the goals of the enterprise.  They are willing to follow his lead because\nof that 'feeling' which makes him the kind of person he is.\n</code></pre> <pre><code>If the manager is to accomplish his objectives, he absolutely has to get the \ninformation necessary to make the right decisions.  The steps along the way\ndefine themselves as he goes toward his objectives.  To surmount each step,\nhe needs solid facts so that he can recognize the realities of situations. \nHis decisions, if based realistically upon reliable information, will not be \nall that difficult.  Facts are power.  They are crucial to good management.\nIn order to get the straight facts in any situation, the manager must ask \nstraight questions, and to do that he must do his homework so that he has a \ndeep understanding of what he is encountering.  If he has a good record of \nmaking the right decisions, he can help people around him to be effective\nand successful in their own areas, so that their total accomplishments is\ngreater than the sum of their individual parts.  That is leadership.\n\nAnd if the leadership is successful, it creates a momentum in the enterprise\nwhich enriches the participants with such a feeling of pride and energy\ntha they produce results, short-term and long-term results, which they \nthemselves never thought possible.  I've separated the elements here, but\nin practice, they all move along together, en masse, nourishing each other\nlike the fusion in a nuclear reactor, creating the fire, the pressure, and the\npower which produce energy.  All this is the critical emotional content\nof good management.\n\nThis is the emotional horsepower that drives people to do things, drives them\nto keep at it because they feel they must get the answer, drives them to push\non until they get results that are satisfactory to them.  Of course, you don't\nalways succeed in every effort.  But then you recognize it early on, and \nyou get out of that situation.  You cut your losses and go on to something\nelse.  If you are a manager, you don't drift.\n</code></pre>"},{"location":"archives/2019/2019-02-20-how-to-use-slide-rules/","title":"How to use slide rules","text":""},{"location":"archives/2019/2019-02-20-how-to-use-slide-rules/#multiplication","title":"Multiplication","text":"<p>To multiply two small numbers, 2x3 <pre><code>- Use rules C and D.  Starting from the left, line up C (1) to D (2).  \n- Move cursor to C (3).  D (6) shows the answer.\n</code></pre></p> <p>To mulitply two big numbers, 6x7 <pre><code>- Use rules C and D.  Starting from the right, line up C (1) to D (6).\n- Move cursor to C (7).  D (4.2) shows the answer.  Adjust by 10 = 42.\n</code></pre></p> <p>To multiple two big numbers, 12 x 67 <pre><code>- Use rules C and D.  Starting from the left, line up C (1.2) to D (1.2).\n- Move cursor to C (6.7).  D (8) shows the answer.  Adjust by \n  thinking 10x70=700.  So 8 must be 800.\n</code></pre></p> <p>What are the limits of rules C and D? <pre><code>- Reading C and D from left to right is only for small digits, like 2x4.\n- Reading C and D from right to left works for bigger digits.\n</code></pre></p>"},{"location":"archives/2019/2019-02-20-how-to-use-slide-rules/#division","title":"Division","text":"<p>To divide two small numbers, 4.5 / 7.8 <pre><code>- Use rules C and D. \n- Move cursor to D (4.5).\n- Move C (7.8) until 7.8 hits the cursor.\n- Move cursor to C (1).\n- The answer is in D (5.78).\n- Since 4/8 ~ 0.5, the answer is 0.578.\n</code></pre></p> <p>To divide two numbers, 142 / 83 <pre><code>- Use rules C and D.\n- Move cursor to D (1.42).\n- Move C (8.3) until 8.3 hits the cursor.\n- Move cursor to C (1).\n- The answer is in D (1.72).\n- Since 160/80 ~ 2, the answer is 1.72.\n</code></pre></p> <p>To divide two big numbers, 2,313,184 / 80,234 <pre><code>- Use rules C and D.\n- 2,313,184 ~ 2.3e6.\n- 80,234 ~ 8.0e4.\n- Move cursor to D (2.3).\n- Move C (8.0) until 8.0 hits the cursor.\n- Move cursor to C (1).\n- The answer is in D (2.88).\n~ Adjusted for scale, 2.88e2 ~ 28.8.\n</code></pre></p>"},{"location":"archives/2019/2019-02-20-how-to-use-slide-rules/#sin-30","title":"Sin 30","text":"<pre><code>- Use rule A and S.  Align rules.\n- Move cursor to S (30).\n- The answer is in A (5).\n- Adjusted, the answer is 0.5.\n</code></pre>"},{"location":"archives/2019/2019-02-20-how-to-use-slide-rules/#cos-30","title":"Cos 30","text":"<pre><code>- Once you can do sin 0-90, you can do any sin or cos.\n- If you look at the cos/sin charts, cos 30 is the same as sin 60.\n- Sin 60 = 0.866.\n</code></pre>"},{"location":"archives/2019/2019-02-20-how-to-use-slide-rules/#tan-30","title":"Tan 30","text":"<pre><code>- Use rule D and T.  Align rules.\n- Move cursor to T (30).\n- The answer is in D (5.76).\n- Adjusted, the answer is 0.576. \n</code></pre>"},{"location":"archives/2019/2019-07-20-all-about-dieting/","title":"Food smarts","text":""},{"location":"archives/2019/2019-07-20-all-about-dieting/#recommendations-from-dr-valter-longo","title":"Recommendations from Dr Valter Longo","text":"<ul> <li>Plenty of vegetables and legumes and a generous splash of olive oil </li> <li>Key to longevity is to slow down the growth hormone receptor (GHR). </li> <li>Proteins activate the GHR- which increases the level of insulin- which is     linked to diabetes and cancer.</li> <li>Proteins activate TOR-S6K- genes that accelerate aging.</li> <li>Sugars activate PKA- another gene that accelerate aging.</li> <li>Reducing calories, particularly from proteins and sugars- decrease the   activites of the GHR- and indirectly- TOR-S6K and PKA.</li> <li>Keep diet to 80% plant and 20% fish.  Keep fish to wild salmon.  Tuna has    high levels of mercury- canned light tuna has less- but better stick to    salmon, sardines and cod.</li> <li>Eat just enough proteins- about 50 grams of protein a day.  Get an    estimate of protein levels here.</li> <li>Eat good unsaturated fats  </li> </ul>"},{"location":"archives/2019/2019-07-20-all-about-dieting/#recommendations-from-the-pros","title":"Recommendations from the pros","text":"<p>Dr Gott from Dr. Gott's No Flour, No Sugar Diet says-</p> <p>While many a low-carb diet guru would have you believe that all carbohyrates are created equal- and are equally to blame for making you fat- they are just  plain wrong.  Fresh fruits and vegetables- as well as whole grains- are full of the essential vitamins, minerals, and fiber that we need to have healthy bodies,  protect ourselves against disease, and function properly.  The problem arises  when technology takes over the digestion process, removing all those valuable  nutrients... </p> <p>Simply put, the more refined a carb is, the fewer nutrients it contains because it has already been broken down, by the refining process, to its elemental form. Modern processing technology has manged to take once healthful whole grains  and strip them of their very benefits.  The whole grain, for instance, a veritable  nutrition workhorse in its natural form, is steamed, pounded, and scraped to  remove its outer fiber-full bran layer, its mineral-dense germ, and its vitamin- rich oil.  Next it is pulverised by high speed steel rollers into a fine powder, then bleached to remove any possible likeness to its original form.  This powdery white substance is then labeled 'all-purpose flour' and used to make almost all of the breads, cookies, crackers, cereals, and pastas you find on your  supermarket shelves.  Even those toasty brown 'wheat breads' are often made with  white flour and then artifically colored to make them look 'healthy'. </p> <p>After all that processing, flour retains its high calorie nature but little else.  It is virtually devoid of fiber and the vitamins and minerals our bodies need to function properly and fend off disease.  The calories in all-purpose flour are what nutritionists call 'empty calories'.  They will fill you up and  provide instance energy, but they won't nourish your body for the long haul.</p> <p>The point of my No Flour, No Sugar Diet is to replace the empty calories of highly refined foots with the nutrient dense calories found in unprocessed foots.  So when I say no flour- I mean no all-purpose flour, but also no whole wheat flour or any product with the word flour in its ingredient list.... All carbs are allowed on the diet except for those foods that contain flour.  This means that you can still enjoy rice, potatoes, barley, oats, peas, corn, beans, vegetables and fruits.</p> <p>Dr Gott says</p> <ol> <li>Avoid food containing </li> <li>flour of any kind- wheat, rice, and corn flours- examples- pizza, pasta, buttery cookies</li> <li>refined or concentrated sugars- cane sugar, beet sugar, glocose, sucrose,       high frutose corn syrup, maple syrup, honey- examples- cakes, ice-cream</li> <li>Eat</li> <li>whole grains and starchy vegetables- brown rice, potatoes, barley, oats, peas,    corn, beans, vegetables and fruits.</li> <li>Maintain a body-mass index of 18.5-24.  </li> </ol> <p><pre><code>BMI = 703 * Weight in pounds / Height in inches squared \n</code></pre> .</p> <p>Robert Davis, PhD in Coffee is good for You</p> <p>Fish oil prevents heart disease...the key ingredients appear to be the omega-3 fatty acids eicosapentaenoic acid (EPA) and docosahexaenoic acid (DHA), which  are found in most fish but especially oily ones such as salmon, mackerel, trout, sardines, and tuna.  </p> <p>Eggs are not bad for your heart...Eating up to six a week doesn't appear to be harmful for most healthy people.  So how can this be if egg yolks are high in  cholesterol and too much cholesterol is bad for us?  Most of our cholesterol is made by the liver, which ramps up production when we eat saturated and trans fats.  But cholesterol from food appears to have little impact on most people's  cholesterol levels.  Eggs are relatively low in saturated fat, and they contain unsaturated fats, which may be beneficial.  Plus, they're a good source of  protein and several vitamins and minerals.  They can be a healthful and more  filling alternative to high-calorie muffins, begals, and sugary cereals. </p> <p>Nuts prevent heart attacks...Nuts lower LDL (bad) cholesterol levels.  They also appear to decrease inflammation in arteries, which may contribute to heart attacks...So which nuts are best for you?... Walnuts, for example, are richest in ALA, an omega-3 fatty acid and peanuts contain resveratrol, a substance also found in red wine... All nuts are relatively high in unsaturated fats,  which care thought to be good for the heart.</p> <p>Trans fats (partially hydrogenated fats) are harmful...Like saturated fats,  trans fats were found to raise LDL (bad) cholesterol, but they also lowered  HDL (good) cholesterol.  People who consume the most trans fats are more likely to develop heart disease.  The increased risk appears to come from artificially created trans fats, not those that occur naturally in milk and meat.  Scientists suspect that trans fats cause harm by not only affecting cholestrol levels but also raising blood fats called triglycerides, promoting inflammation in arteries, and adversely affecting the lining of blood vessels.  Overall, the evidence suggests trans fats are more harmful than saturated fats, and it's more  consistent.  To avoid it, check ingredient labels and steer clear of anything containing partially hydrogenated oils. </p> <p>Gene Stone in The Secrets of People Who Never Get Sick</p> <p>According to Susan Roberts, professor at the Friedman School of Nutrition Science and Policy at Tufts University and author of The \"I\" Diet, her study of caloric reduction calls for a 25 percent cut in calories, but she believes it can be done in any way the dieter wishes as long as it feels comfortable- eating a full diet one day and then cutting calories the next, or eating a normal meal once a day with a reduced meal at other times...</p>"},{"location":"archives/2019/2019-07-20-all-about-dieting/#food-groups-macro-nutrients","title":"Food groups- Macro nutrients","text":""},{"location":"archives/2019/2019-07-20-all-about-dieting/#proteins","title":"Proteins","text":"<ul> <li>Found in meat, nuts, and eggs- sources of amino acids.</li> </ul>"},{"location":"archives/2019/2019-07-20-all-about-dieting/#fats","title":"Fats","text":"<ul> <li>Major source of stored energy in the body</li> <li>Saturated fats</li> <li>Unsaturated fats<ul> <li>Mono-unsaturated fats- oleic acid in olive oil </li> <li>Poly-unsaturated fats- salmon and corn oil</li> </ul> </li> </ul>"},{"location":"archives/2019/2019-07-20-all-about-dieting/#carbohydrates","title":"Carbohydrates","text":"<ul> <li>Simple carbohydrates- simple sugars- monosaccharides (fructose, glucose)    and dissachrides (lactose, sucrose) found in fruit juices, honey, candy or sodas.</li> <li>This type of carbohydrate provides ready energy because your body has to do   very little work to convert simple sugars to glucose.  They are digested   quickly and easily, sending a rush of glucose into your blood stream.    When your body is flooded with glucose in this way, you experience a    temporary sugar high caused by the spike in your blood sugar level.  A    short time later, as the glucose leaves your system, you experience a crash,   which leaves you feeling fatigued and listless- and hungry again as your    body craves more fuel.</li> <li>Complex carbohydrates- whole grains- brown rice, wheat, oats, barley, quinoa     and corn, legumes (beans), and vegetables are made up of much more complicated     sugar molecules.  </li> <li>Your body needs to work much harder to break these      complex sugars down and convert them to glucose.  Because of the extra      effort required to digest these foods, digestion takes place over an      extended period of time- and the glucose your body gets from these foods is     released into your blood stream at a slower, steadier pace.</li> <li>Examples of good carbohydrates</li> <li>Vegetables- all of them</li> <li>Whole fruits- apples, bananas, strawberries</li> <li>Whole grains- pure oats, quinoa, brown rice</li> <li>Legumes- lentils, kidney beans, peas</li> <li>Nuts- almondds, walnuts, hazel nuts, peanuts, macadamia nuts</li> <li>Exceptions to simple carb rule are- milk products and fruits.  Because    milk products and fruits are relatively low in sugar and provide big doses    of imortant vitamins and minerals- fruits also provide fiber- these foods    can be enjoyed as a regular part of a healthful diet.  Choose fresh fruits    instead of fruit juices and low fat or non-fat milk products.</li> </ul>"},{"location":"archives/2019/2019-07-20-all-about-dieting/#difference-between-white-rice-and-brown-rice","title":"Difference between white rice and brown rice","text":"<p>White rice is what you get when you remove the husk,  bran and germ from whole grain \u2013 or brown rice.  When you lose the bran \u2013 you lose the fiber.  When you lose the germ \u2013 you lose B vitamins and some fat.  All that remains is the endosperm, making white rice essentially,  nutritionally naked starch.</p> <p>Consumers like white rice because it\u2019s light and fluffy.  Food manufacturers like it because without the fat it is less likely  to go rancid and has a longer shelf life than whole grain rice does</p>"},{"location":"archives/2019/2019-07-20-all-about-dieting/#what-is-wrong-with-starch","title":"What is wrong with starch?","text":"<p>Starches include grain products, such as bread, crackers, pasta,  and rice. As with simple sugars, some complex carbohydrate foods are  better choices than others. Refined grains, such as  white flour and white rice, have been processed, which removes nutrients  and fiber.</p> <p>White rice is considered empty carbs since it loses its main sources  of nutrients. ... A 3.5-ounce (100-gram) serving of brown rice has  fewer calories and carbs than white rice and twice as much fiber.  In general, brown rice also has higher amounts of vitamins and minerals  than white rice.</p>"},{"location":"archives/2019/2019-07-20-all-about-dieting/#what-are-free-radicals-and-antioxidants","title":"What are free radicals and antioxidants?","text":"<p>Free radicals are unstable atoms that can damage cells, causing illness and  aging.  Read here for more details on free radicals and antioxidants.</p>"},{"location":"archives/2020/2020-01-10-colossal_failure/","title":"A Colossal Failure","text":"<p>Lawrence McDonald's \"A Colossal Failure of Common Sense\" reads like a  work of fiction- a real page-turner- but the events that led to the  downfall of Lehman Brothers happened in an unreal era not too long ago.  I've  decided to save some prized passages here:</p>"},{"location":"archives/2020/2020-01-10-colossal_failure/#on-fuck-ups","title":"On fuck-ups:","text":"<pre><code>The trading floor is an arena of instant decisions: all traders\nare called to make markets all the time, to price the stock,\nprice the bonds, buy, sell, or hold.  And I'd just make a\nmistake.  A big one.  There was nowhere to turn.  No one could\nhelp.  My word was my bond.  There was no going back.\n\nWhich was precisely when Rich Gatward appeared on my left\nshoulder, like the angel of death. \n\n\"The Calpine trade ... what delta did you do it on?\"  The equity\ntrading floor around me suddenly seemed like like the petrified\nforest.  It always does when Gatward comes over.  Everyone stops,\nwatching for the scene to unfold.  I knew only one thing: I'd\nshorted only half the stock I should have.\n\nAh...er...Rich, I did it on a 30, but I probably should have done\nit on a 60.\" \"What's this word _probably_ -- what do you mean by\nthat\" \"Er..I mean we should have done the trade on a 60 delta...\"\n\"How many shares of stock do you need to sell right now to be\nhedged?\"\n\nI grappled for the bond calculator on the screen and hit the\nbuttons as my entire career flashed before my eyes, the way it\ndoes, I believe, when you face instant death. \n\n\"Forty-five thousand two hundred, Rich.\" \"Well, don't look at me.\nSell the fucking stock,\" he snapped. \n\nI could feel every eye on the floor trained on me, and he was not\nfinished yet. \"If you're gonna work on my desk, you don't fly\nblind.  You'd better know your deltas to the fucking penny.\" \n\n\"You're right.  I screwed up, and I'm sorry.  It won't happen\nagain.\" \n\n\"You're goddamned right it won't, becuase if it does we're going\nto have a big fucking probllem. Do you understand that?\"\n\n\"Yes, I do.  It was a mistake.  It won't happen again.  I'm\nsorry.\"\n\n\"You'd better be fucking sorry.  Right here we're dealing with\nthe firm's capital.  You're on my watch, and I have an eye on\nevery fucking penny of risk on this desk- and if you have a\nproblem with that, you can get the fuck out.\"\n\nAnd with that he stormed off, back to his desk.  It was as if the\nentire place could breathe again.  People went back to work and\nthe whole shouting, yelling, tempestuous atmosphere of the\ntrading floor swiftly resumed business as usual. \n</code></pre>"},{"location":"archives/2020/2020-01-10-colossal_failure/#on-executive-presense-and-decision-making","title":"On executive presense and decision making","text":"<pre><code>...I twice thought I saw my ultimate boss, Alex Kirk, Lehman's\nglobal head of high-yield and leveraged-loan business, and a huge\npower in the land, look just a tad hard-faced at some of the more\noptimistic assumptions coming from the guys who walked on water\n(the mortgage guys).  On anyone else I might not have noticed,\nbut Alex was a terrific guy of very even temperament, displaying\nnerves of steel in all of our trading sorties.  He was six feet\ntall, had an extremely commanding presence, and was never prone\nto unnecessary displays of emotion.\n\nMy observation took place at one of our 7AM meetings.  The\ndiscussion was about the US real estate market, and I thought I\nnoticed osmething.  It wasn't a lapse in concentration, because\nhe was listening intently, no doubt about that.  But for just a\nsplit second I thought he might say something, and I sensed it\nmight be an unfavorable comment.  But whatever it was, he reined\nhimself in and said nothing.\n\nJust before we broke up, to return to the trading floor, I\nthought I noticed it again.  And once more the subject was\nproperty.  But once more our leader refrained from making a\ncomment, and I never gave it another thought.  At least not until\nwe were outside the room.  That was when Alex pulled Larry\nMcCarthy and me aside and looked at us with a deadly serious\nexpression. \n\n\"This housing market,\" he snapped, \"it's 'roided up.\" ... \"This\nwhole thing is fucking ridiculous,\" he confirmed, obviously not\nwanting to sugarcoat the issue completely.  And then he added,\njust for good measure, \"This market is on fucking steriods.\"\n\nThe three of us just stood there.  And for once Larry was lost for\nwords.  He looked straight at Alex, nodded curtly, and held out\nhis right hand.  I watched them shake.  I witnessed an unspoken\nbond forged between them.  And it was not convertible.  We might\nas well, all three of us, have cut our thumbs with a bowie knife\nand allowed our blood to mingle, because right there outside that\nconference room we three had locked our minds into a potential\nmutiny.  And it was one I think we all sensed might one day save\nthis organization, which to a man we believed could be heading\nfor very serious trouble.\n</code></pre>"},{"location":"archives/2020/2020-01-10-colossal_failure/#triumph-with-delta-bonds","title":"Triumph with Delta bonds:","text":"<pre><code>\"US Air just made a hostile bid for Delta.  At least fifty-five\ncents on the dollar for the bonds.\" \n\nI think I nearly died of happiness.  Chills ran up my spine, and\nmy pulse was racing as I headed up to the trading floor...I was\njust running the numbers through my mind, and the key ones were\nthere we now owned about $750 million worth, face value of the\nbonds and we'd bought most of them for well under 25 cents on the\ndollar. \n...\nIt was not yet seven o'clock, but by now everyone in the entire\nbank knew about the drama, and a lot of them knew we were about\nto make a colossal fortune for the firm.  The atmosphere was\nelectric, nothing less, as our group moved into gear, because\ntrading was expected to start early, maybe around seven-thirty.\n\nThe place was packed, and every single eye was on us, especially\nme, the market maker.  But suddenly there was a shift of focus,\nand we turned to the entrace to the trading floor to see Jane\nCastle walking in.  A huge burst of applause broke out, a\nspontaneous cry of joy, just for her.  Through all the months,\nthrough all the doubts and all the fears, she'd never wavered in\nher valuation of Delta Air Lines, and everyone knew it. \n\nThe smile on her face would have lit up Yankee Stadium, and she\nwalked straight up to me and gave me a sweeping high five that\ndarn nearly broke my wrist.  Moments later Larry came in, wearing\na brand-new suit and looking like the king of the world, and\nanother burst of applause ripped into the mourning air.  When it\ndied down, he looked over to Joe Beggans, who was about to start\ntrading the Delta bonds, and, with a huge grin on his face, held\nout his hand and shouted, \"Gimme the keys, Joe.  I'm driving!\"\nThe whole place erupted. \n\n... The rest remains a blur until the moment Larry McCarthy\ndecided to get out.  \"Okay, guys.  Let's go,\" he called, and, for\nthe first time for almost a year, we began to divest ourselves of\nthe Delta bonds.  Larry launched them onto the market with\nconsummate skill, knowing, of course, that US Air was out there\nwaiting, begging to buy.  By the time he had finished, Lehman had\nmade a $250 million profit, the larget one-day triumph in the\nhistory of Lehman Brothers bond trading.\n</code></pre>"},{"location":"archives/2020/2020-01-10-colossal_failure/#mike-gelbands-farewell","title":"Mike Gelband's farewell","text":"<pre><code>The news broke the following morning on the Bloomberg tape, and\nLarry McCarthy was not so much shocked as shattered.  Mike\nGelband was his linesman, our blocker, the big hitter who was a\nhuge sponsor of all of our risk and short positions.  He'd had\nthe most phenomenal career, punctuated by success after success.\nIn a democracy he'd have been swept to power, most certainly by\nLarry McCarthy, who regarded him as the most talented guy in the\nbuilding.  The chairman and his deputy had somehow found a way to\nlose him, and that had to rank as one of the most stupid acts\nhe'd ever seen anyone do- anywhere.\n\nOn the day Mike left, May 2 2007, everyone trooped down to the\nthird floor around eleven to say good-bye.  So many people wanted\nto shake his hand that a huge receiving line formed.  Everyone\nowed him something.  He was such a big part of our strength and\nstanding in the corporation.  His presense made us count.  Some\nof the women were in tears as the great Lehman banker moved from\nfriend to friend.  How could anything ever be the same again. \n\nMike could have saved his job, could have gone on collecting $10\nto $20 million a year, every dollar of it earned.  But he was not\nthat kind of guy.  Like Larry, Mike was certain we were steaming\ntoward the iceberg, with a balance sheet he thought was\ncatastrophically overleveraged.  He had to be true not only to\nthe firm but to himself,and he could not countenance the wishes of\nthe chairman.  And so he walked away from one of the highest\npaying jobs on Wall Street, walked away from those enormous\nearnings.  It took a real man to do that. \n\nHe came over to say a last good-bye to Larry, Joe, and me.  And\nthere was a strange silence throughout the trading floor as he\ndid so.  When he finally turned away and walked toward the door,\nthere was a sustained and heartfelt burst of applause- not the\nraucous outpouring that greets a touchdown or a home run, just a\nfierce clapping of hands, like the kind that greets a pitcher\nwhen he's finally relieved in the eighth with his team out in\nfront after a long job, brilliantly done.  For the record, he did\nturn around one last time and, typically, just smiled and nodded\nto his fans.  If he'd been wearing a cap, he would have doffed\nit- for the good times.\n</code></pre>"},{"location":"archives/2020/2020-01-10-colossal_failure/#larry-mccarthys-farewell","title":"Larry McCarthy's farewell","text":"<pre><code>\"I told them I'd heard a lot about Dick Fuld over the years.\nHe's a former commercial paper trader, but not once, not one time\nin all my years here, did I ever see him on the trading floor.\nNot even on the day me and the guys had the single most\nprofitable day in the history of Lehman's fixed-income division-\ntwo hundred fifty million clams, and the guy's a no-show.\"\n\nIt's hard for Captain Cool to show outage.  But I could see it on\nhis face at that moment, just at the memory of that shining day\nwhen we sold the Delta bonds and never even received a note or a\nhandshake from the head of the corporation. \n\n\"I said I just thought it was very odd, that's all- a pretty\nunusual way to stay close to your troops.\"\n\nFor the rest of the morning Larry walked around saying his\ngoodbyes and spending time with the support staff.  He told me he\nwas leaving the building right after lunch, but he didn't mention\nprecisely what lunch would mean on this day.  It turned out he'd\nordered twenty carts of food from the outstanding steakhouse Ben\nBenson's.  That's where he ate, and that was the food he wanted\nfor his guys.  When fifteen waiters started pushing them in I\nthought the A train had veered off its tracks.  There were huge\nmetal trays of prime rib, filets, porterhouses, creamed spinach,\nmountains of potatoes.  There was enough shrimp and lobster to\nfeed the population of Martha's Vineyard.  Larry had decried, \"No\nplastic,\" so there was only the finest cutlery and linen napkins.\nThe feast cost him around $14,000.\n\nHe and I talked quietly while we dined, and he came up with some\ntrue McCarthyisms- \"Never tell anyone on Wall Street your\nproblems, old buddy.  Ninety percent of those you tell don't\ncare, and the other ten percent are glad you have them.\"\n\n...\n\nThere were eighteen rows of people between Larry and the door,\nand one by one they stood up and applauded as he walked past,\njust as they had with Mike.  \n\nLarry never looked back.  But just before he reached the glass\ndoors, he raised a clenched right fist high in the air.  And then\nhe was gone.  Something in the soul of Lehman Brothers was gone\nwith him, and it never came back as we steamed ever onward toward\nLarry's iceberg.\n</code></pre>"},{"location":"archives/2020/2020-01-10-colossal_failure/#the-carry-trade","title":"The carry trade","text":"<pre><code>For a start, commercial paper is short-term money, loaned out for\nthirty to forty days or less.  This market is used by the biggest\nand best blue-chip companies.  Commercial paper is the quickest,\ncheapest, and easiest way for them to raise a fast loan that is\nnot registed by the SEC.  As an example, say Bear Stearns goes to\nJPMorganChase and requests a $500 million loan for fourteen days.\nQuestion- would you lend Bear Stearns half a billion dollars just\na couple of weeks when they were backing it with AAA-rated\nmortgage bonds and willing to pay 5 percent interest?  Answer:\nprobably yes, since that would mean a $959,000 profit.\n\nNow JPMorganChase isn't going to offer up that $500 million to\nany old applicant.  But Bear Stearns is a highly respected bank,\nand they've done something similar many times before.  The same\nwould apply to Lehman, Morgan Stanley, ... or Countrywide.  All\nof them have always paid back, with the interest, right on time.\nBut in many cases they paid back with money from another\nshort-term paper loan they'd borrow from someone else. For banks\nwith blue-chip lines of credit, it was possible to keep a huge\nloan rolling for months and months, paying back with borrowed\nmoney over andover.  Simply put, they were taking short-term\nborrowed money and investing in longer-term mortgage-backed\nsecurities that paid a higher yield.  In Wall Street jargon, this\nwas known as the \"carry trade\" or the \"positive carry trade.\"\n</code></pre>"},{"location":"archives/2020/2020-02-09-the-hard-things/","title":"The Hard Thing About Hard Things","text":"<p>Just read Ben Horowitz's \"The Hard Thing About Hard Things\".  Here are some take-aways that I find useful. </p>"},{"location":"archives/2020/2020-02-09-the-hard-things/#why-its-imperative-to-tell-it-like-it-is","title":"Why It's Imperative To Tell It Like It Is","text":"<p>There are three key reasons why being transparent about your company's  problems make sense: </p>"},{"location":"archives/2020/2020-02-09-the-hard-things/#trust","title":"Trust","text":"<p>Without trust, communication breaks.  More specifically- </p> <p>In any human interaction, the required amount of communication is inversely proportional to the level of trust. </p> <p>Consider the following- If I trust you completely, then I require no  explanation or communication of your actions whatsoever, because I know that whatever you are doing is in my best interests.  On the other hand,  if I don't trust you at all, then no amount of talking, explaining, or  reasoning will have any effect on me, because I do not trust that you are telling me the truth. </p> <p>[Personal commentary- this reminds me of how the staff of a well-tuned  kitchen works.]</p>"},{"location":"archives/2020/2020-02-09-the-hard-things/#the-more-brains-working-on-the-hard-problems-the-better","title":"The more brains working on the hard problems, the better","text":"<p>In order to build a great technology company, you have to hire lots of  incredibly smart people.  It's a total waste to have lots of big brains but not let them work on your biggest problems.  A brain, no matter how  big, cannot solve a problem it doesn't know about.  As the open source  community would explain it, \"Given enough eyeballs, all bugs are shallow.\"</p>"},{"location":"archives/2020/2020-02-09-the-hard-things/#a-good-culture-is-like-the-old-rip-routing-protocol-bad-news-travel-fast-good-news-travel-slow","title":"A good culture is like the old RIP routing protocol- Bad news travel fast; good news travel slow","text":"<p>If you investigate companies that have failed, you will find that many employees knew about fatal issues long before those issues killed the company.  If the employees knew about the deadly problems, why didn't they say something? (Personal commentary- think NASA or Boeing)  Too often the answer is that the company culture discouraged the spread of bad news, so the knowledge lay  dormant until it was too late to act.</p> <p>A healthy company culture encourages people to share bad news.  A company that discusses its problems freely and openly can quickly solve them.  A company that covers up its problems frustrates everyone involved.  The resulting action item for CEOs- Build a culture that rewards, not punishes, people for getting problems into the open where they can be solved.</p> <p>As a corollary, beware of management maxims that stop information from flowing freely in your company.  For example, consider the old management standard-  \"Don't bring me a problem without bringing me a solution.\"  What if the employee cannot solve an important problem?  For example, what if an engineer identifies a serious flaw in the way the product is being marketed?  Do you really want him to bury that information?  Management truisms like these may be good for  employees to asipre to in the abstract, but they can also be the enemy of  free-flowing information- which may be critical for the health of the company.</p>"},{"location":"archives/2020/2020-02-11-who-gets-what/","title":"Who Gets What And Why","text":""},{"location":"archives/2020/2020-02-11-who-gets-what/#quick-notes","title":"Quick Notes","text":"<p>Economics is about the efficient allocation of scare resources, and about making them less scarce.</p> <p>One way financial markets provide thickness to ordinary traders is by giving certain professional traders the incentive to become \"liquidity providers.\" Members of this group don't plan to hold a security and watch it appreciate;  rather, they move fast and act as market makers.  They always offer both a bid and an ask on the financial commodity for which they are making a market; that is, they simultaneously offer to buy and sell.  Liquidity providers make their  money by having a spread between those buy and sell offers, which they  continuously adjust as the market moves.  The narrower that spread, the greater the quantity they offer to buy or sell at that spread, the better service they are able to provide to whoever comes on the market to make a trade.</p> <p>But when there are high-speed traders in the markets, LPs are forced to quote  bigger spreads or offer to trade a lower quantity to at least partially protect themselves against being 'sniped' by a trader using one of the new superfast  lines.  Such a trader might be able to buy from them at their old prices (now out of date, or 'stale') and then moments later sell back to them at the new higher prices.  The wider the spreads the LPs quote, the further prices have to jump before they can be exploited on both sides of the trade this way, and the more they pass on the cost of protecting themselvs to ordinary  investors. </p>"},{"location":"archives/2020/2020-03-01-many-ideas/","title":"Ideas From Many Fields","text":""},{"location":"archives/2020/2020-03-01-many-ideas/#depressive-realism","title":"Depressive Realism","text":"<p>Depressed people have a more accurate view of the world because they\u2019re more realistic about how risky and fragile life is. The opposite of \u201cblissfully unaware.\u201d</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#skill-compensation","title":"Skill Compensation","text":"<p>People who are exceptionally good at one thing tend to be exceptionally poor at another.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#curse-of-knowledge","title":"Curse of Knowledge","text":"<p>The inability to communicate your ideas because you wrongly assume others have the necessary background to understand what you\u2019re talking about.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#base-rates","title":"Base Rates","text":"<p>The success rate of everyone who\u2019s done what you\u2019re about to try.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#base-rate-neglect","title":"Base-Rate Neglect","text":"<p>Assuming the success rate of everyone who\u2019s done what you\u2019re about to try doesn\u2019t apply to you, caused by overestimating the extent to which you do things differently than everyone else.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#compassion-fade","title":"Compassion Fade","text":"<p>People have more compassion for small groups of victims than larger groups, because the smaller the group the easier it is to identify individual victims.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#system-justification-theory","title":"System Justification Theory","text":"<p>Inefficient systems will be defended and maintained if they serve the needs of people who benefit from them \u2013 individual incentives can sustain systemic stupidity.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#three-men-make-a-tiger","title":"Three Men Make a Tiger","text":"<p>People will believe anything if enough people tell them it\u2019s true. It comes from a Chinese proverb that if one person tells you there\u2019s a tiger roaming around your neighborhood, you can assume they\u2019re lying. If two people tell you, you begin to wonder. If three say it\u2019s true, you\u2019re convinced there\u2019s a tiger in your neighborhood and you panic.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#buridans-ass","title":"Buridan\u2019s Ass","text":"<p>A thirsty donkey is placed exactly midway between two pails of water. It dies because it can\u2019t make a rational decision about which one to choose. A form of decision paralysis.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#pareto-principle","title":"Pareto Principle","text":"<p>The majority of outcomes are driven by a minority of events.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#sturgeons-law","title":"Sturgeon\u2019s Law","text":"<p>\u201c90% of everything is crap.\u201d The obvious inverse of the Pareto Principle, but hard to accept in practice.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#cumulative-advantage","title":"Cumulative advantage","text":"<p>Social status snowballs in either direction because people like associating with successful people, so doors are opened for them, and avoid associating with unsuccessful people, for whom doors are closed.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#impostor-syndrome","title":"Impostor Syndrome","text":"<p>Fear of being exposed as less talented than people think you are, often because talent is owed to cumulative advantage rather than actual effort or skill.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#anscombes-quartet","title":"Anscombe\u2019s Quartet","text":"<p>Four sets of numbers that look identical on paper (mean average, variance, correlation, etc.) but look completely different when graphed. Describes a situation where exact calculations don\u2019t offer a good representation of how the world works.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#ringelmann-effect","title":"Ringelmann Effect","text":"<p>Members of a group become lazier as the size of their group increases. Based on the assumption that \u201csomeone else is probably taking care of that.\u201d</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#semmelweis-reflex","title":"Semmelweis Reflex","text":"<p>Automatically rejecting evidence that contradicts your tribe\u2019s established norms. Named after a Hungarian doctor who discovered that patients treated by doctors who wash their hands suffer fewer infections, but struggled to convince other doctors that his finding was true.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#false-consensus-effect","title":"False-Consensus Effect","text":"<p>Overestimating how widely held your own beliefs are, caused by the difficulty of imagining the experiences of other people.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#boomerang-effect","title":"Boomerang Effect","text":"<p>Trying to persuade someone to do one thing can make them more likely to do the opposite, because the act of persuasion can feel like someone stealing your freedom and doing the opposite makes you feel like you\u2019re taking your freedom back.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#chronological-snobbery","title":"Chronological Snobbery","text":"<p>\u201cThe assumption that whatever has gone out of date is on that account discredited. You must find why it went out of date. Was it ever refuted (and if so by whom, where, and how conclusively) or did it merely die away as fashions do? If the latter, this tells us nothing about its truth or falsehood. From seeing this, one passes to the realization that our own age is also \u2018a period,\u2019 and certainly has, like all periods, its own characteristic illusions.\u201d \u2013 C.S. Lewis</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#plancks-principle","title":"Planck\u2019s Principle","text":"<p>\u201cA new scientific truth does not triumph by convincing its opponents and making them see the light, but rather because its opponents eventually die and a new generation grows up that is familiar with it.\u201d</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#mcnamara-fallacy","title":"McNamara Fallacy","text":"<p>A belief that rational decisions can be made with quantitative measures alone, when in fact the things you can\u2019t measure are often the most consequential. Named after Defense Secretary McNamara, who tried to quantify every aspect of the Vietnam War.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#courtesy-bias","title":"Courtesy Bias","text":"<p>Giving opinions that are likely to offend people the least, rather than what you actually believe.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#berksons-paradox","title":"Berkson\u2019s Paradox","text":"<p>Strong correlations can fall apart when combined with a larger population. Among hospital patients, motorcycle crash victims wearing helmets are more likely to be seriously injured than those not wearing helmets. But that\u2019s because most crash victims saved by helmets did not need to become hospital patients, and those without helmets are more likely to die before becoming a hospital patient.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#group-attribution-error","title":"Group Attribution Error","text":"<p>Incorrectly assuming that the views of a group member reflect those of the whole group.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#baader-meinhof-phenomenon","title":"Baader-Meinhof Phenomenon","text":"<p>Noticing an idea everywhere you look as soon as it\u2019s brought to your attention in a way that makes you overestimate its prevalence.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#ludic-fallacy","title":"Ludic Fallacy","text":"<p>Falsely associated simulations with real life. Nassim Taleb</p> <p>\u201cOrganized competitive fighting trains the athlete to focus on the game and, in order not to dissipate his concentration, to ignore the possibility of what is not specifically allowed by the rules, such as kicks to the groin, a surprise knife, et cetera. So those who win the gold medal might be precisely those who will be most vulnerable in real life.\u201d</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#normalcy-bias","title":"Normalcy Bias","text":"<p>Underestimating the odds of disaster because it\u2019s comforting to assume things will keep functioning the way they\u2019ve always functioned.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#actor-observer-asymmetry","title":"Actor-Observer Asymmetry","text":"<p>We judge others based solely on their actions, but when judging ourselves we have an internal dialogue that justifies our mistakes and bad decisions.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#the-90-9-1-rule","title":"The 90-9-1 Rule","text":"<p>In social media networks, 90% of users just read content, 9% of users contribute a little content, and 1% of users contribute almost all the content. Gives a false impression of what ideas are popular or \u201caverage.\u201d</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#texas-sharpshooter-fallacy","title":"Texas Sharpshooter Fallacy","text":"<p>Goals set retroactively after an activity, like shooting a blank wall and then drawing a bullseye around the holes you left, or picking a benchmark after you\u2019ve invested.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#fredkins-paradox","title":"Fredkin\u2019s Paradox","text":"<p>Confronted with two equally good options, you struggle to decide, even though your decision doesn\u2019t matter because both options are equally good. The more equal the options, the harder the decision.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#poisoning-the-well","title":"Poisoning the Well","text":"<p>Presenting irrelevant adverse information about someone in a way that makes everything else that person says seem untrustworthy. \u201cBefore you hear my opponent\u2019s healthcare plan, let me remind you that he got a DUI in college.\u201d</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#golem-effect","title":"Golem Effect","text":"<p>Performance declines when supervisors/teachers have low expectations of your abilities.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#appeal-to-consequences","title":"Appeal to Consequences","text":"<p>Arguing that a hypothesis must be true (or false) because the outcome is something you like (or dislike). The classic example is arguing that climate change isn\u2019t real because combating climate change will hurt the economy.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#plain-folks-fallacy","title":"Plain Folks Fallacy","text":"<p>People of authority acquiring trust by presenting themselves as Average Joe\u2019s, when in fact their authority proves they are different from everyone else.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#behavioral-inevitability","title":"Behavioral Inevitability","text":"<p>\u201cHistory never repeats itself; man always does.\u201d \u2013 Voltaire</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#apophenia","title":"Apophenia","text":"<p>A tendency to perceive correlations between unrelated things, because your mind can only deal with tiny sample sizes and assuming things are correlated creates easy/comforting explanations of how the world works.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#self-handicapping","title":"Self-Handicapping","text":"<p>Avoiding effort because you don\u2019t want to deal with the emotional pain of that effort failing.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#hanlons-razor","title":"Hanlon\u2019s Razor","text":"<p>\u201cNever attribute to malice that which can be adequately explained by stupidity.\u201d</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#false-uniqueness-effect","title":"False Uniqueness Effect","text":"<p>Assuming your skills are unique when they\u2019re not. Comes from conflating \u201cI\u2019m good at this\u201d with \u201cOthers are bad at this.\u201d</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#hard-easy-effect","title":"Hard-Easy Effect","text":"<p>Hard tasks promote overconfidence because the rewards are high and fun to dream about; easy tasks promote underconfidence because they\u2019re boring and easy to put off.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#neglect-of-probability","title":"Neglect of Probability","text":"<p>Arguing that Nate Silver was wrong when he said Hillary Clinton has a 70% chance of winning, and using Donald Trump\u2019s victory as your proof. Good predictions are based on probabilities, but the assessment of predictions are always binary, right or wrong.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#cobra-effect","title":"Cobra Effect","text":"<p>Attempting to solve a problem makes that problem worse. Comes from an Indian story about a city infested with snakes offering a bounty for every dead cobra, which caused entrepreneurs to start breeding cobras for slaughter.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#braesss-paradox","title":"Braess\u2019s Paradox","text":"<p>Adding more roads can make traffic worse because new shortcuts become popular and overcrowded.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#non-ergodic","title":"Non-Ergodic","text":"<p>When group probabilities don\u2019t apply to singular events. If 100 people play Russian Roulette once, the odds of dying might be, say, 10%. But if one person plays Russian Roulette 100 times, the odds are dying are practically 100%.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#pollyanna-principle","title":"Pollyanna Principle","text":"<p>It\u2019s easier to remember happy memories than bad ones.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#declinism","title":"Declinism","text":"<p>Perpetually viewing society as in decline, because you\u2019re afflicted by the Pollyanna Principle and you forget how much things sucked in the past.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#empathy-gap","title":"Empathy Gap","text":"<p>Underestimating how you\u2019ll behave when you\u2019re \u201chot\u201d (angry/aroused/rushed), caused by the inability to accurately foresee how your body\u2019s physical response to situations (dopamine, adrenaline, etc.) will influence decision-making.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#abilene-paradox","title":"Abilene Paradox","text":"<p>A group decides to do something that no one in the group wants to do because everyone mistakenly assumes they\u2019re the only ones who object to the idea and they don\u2019t want to rock the boat by speaking up.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#collective-narcissism","title":"Collective Narcissism","text":"<p>Exaggerating the importance and influence of your social group (country, industry, company, department, etc.).</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#moral-luck","title":"Moral Luck","text":"<p>Praising someone for a good deed they didn\u2019t have full control over. \u201cAvoid calling heroes those who had no other choice.\u201d \u2013 Taleb.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#feedback-loops","title":"Feedback Loops","text":"<p>Falling stock prices scare people, which cause them to sell, which makes prices fall, which scares more people, which causes more people to sell, and so on. Works both ways.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#hawthorne-effect","title":"Hawthorne Effect","text":"<p>Being watched/studied changes how people behave, making it difficult to conduct social studies that accurately reflect the real world.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#perfect-solution-fallacy","title":"Perfect Solution Fallacy","text":"<p>Comparing reality with an idealized alternative. Prevalent in any field governed by uncertainty.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#weasel-words","title":"Weasel Words","text":"<p>Phrases that appear to have meaning but convey nothing tangible. \u201cGrowth was solid last quarter,\u201d or \u201cMany people believe.\u201d</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#hormesis","title":"Hormesis","text":"<p>Something that hurts you in a high dose can be good for you in small doses. (Weight on your bones, drinking red wine, etc.)</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#backfiring-effect","title":"Backfiring Effect","text":"<p>A supercharged version of confirmation bias where being presented with evidence that goes against your beliefs makes you double down on your initial beliefs because you feel you\u2019re being attacked.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#reflexivity","title":"Reflexivity","text":"<p>When cause and effect are the same. People think Tesla will sell a lot of cars, so Tesla stock goes up, which lets Tesla raise a bunch of new capital, which helps Tesla sell a lot of cars.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#second-half-of-the-chessboard","title":"Second Half of the Chessboard","text":"<p>Put one grain of rice on the first chessboard square, two on the next, four on the next, then eight, then sixteen, etc, doubling the amount of rice on each square. When you\u2019ve covered half the chessboard\u2019s squares you\u2019re dealing with an amount of rice that can fit in your lap; in the second half you quickly get to a pile that will consume an entire city. That\u2019s how compounding works</p> <p>slowly, then ferociously.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#peter-principle","title":"Peter Principle","text":"<p>Good workers will continue to be promoted until they end up in a role they\u2019re bad at.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#friendship-paradox","title":"Friendship Paradox","text":"<p>On average, people have fewer friends than their friends have. Occurs because people with an abnormally high number of friends are more likely to be one of your friends. It\u2019s a fundamental part of social network dynamics and makes most people feel less popular than they are.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#hedonic-treadmill","title":"Hedonic Treadmill","text":"<p>Expectations rise with results, so nothing feels as good as you\u2019d imagine for as long as you\u2019d expect.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#positive-illusions","title":"Positive Illusions","text":"<p>Excessively rosy views about the decisions you\u2019ve made to maintain self-esteem in a world where everyone makes bad decisions all the time.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#ironic-process-theory","title":"Ironic Process Theory","text":"<p>Going out of your way to suppress thoughts makes those thoughts more prominent in your mind.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#clustering-illusions","title":"Clustering Illusions","text":"<p>Falsely assuming that the inevitable bunching of random results in a large sample indicates a trend.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#foundational-species","title":"Foundational Species","text":"<p>A single thing that plays an outsized role in supporting an ecosystem, whose loss would pull down many others with it. In nature kelp, algae, and coral. In business The Federal Reserve and Amazon.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#bizarreness-effect","title":"Bizarreness Effect","text":"<p>Crazy things are easier to remember than common things, providing a distorted sense of \u201cnormal.\u201d</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#nonlinearity","title":"Nonlinearity","text":"<p>Outputs aren\u2019t always proportional to inputs, so the world is a barrage of massive wins and horrible losses that surprise people.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#moderating-relationship","title":"Moderating Relationship","text":"<p>The correlation between two variables depends on a third, seemingly unrelated variable. The quality of a marriage may be dependent on a spouse\u2019s work project that\u2019s causing stress.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#denomination-effect","title":"Denomination Effect","text":"<p>One hundred $1 bills feels like less money than one $100 bill. Also explains stock splits \u2013 buying 10 shares for $10 each feels cheaper than one share for $100.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#woozle-effect","title":"Woozle Effect","text":"<p>\u201cA reliable way to make people believe in falsehoods is frequent repetition, because familiarity is not easily distinguished from truth.\u201d - Daniel Kahneman.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#google-scholar-effect","title":"Google Scholar Effect","text":"<p>Scientific research depends on citing other research, and the research that gets cited the most is whatever shows up in the top results of Google Scholar searches, regardless of its contribution to the field.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#inversion","title":"Inversion","text":"<p>Avoiding problems can be more important than scoring wins.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#gamblers-ruin","title":"Gambler\u2019s Ruin","text":"<p>Has many meanings, the most important of which is that playing a negative-probability game persistently enough guarantees going broke.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#principle-of-least-effort","title":"Principle of Least Effort","text":"<p>When seeking information, effort declines as soon as the minimum acceptable result is reached.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#dunning-kruger-effect","title":"Dunning-Kruger Effect","text":"<p>Knowing the limits of your intelligence requires a certain level of intelligence, so some people are too stupid to know how stupid they are.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#knightian-uncertainty","title":"Knightian Uncertainty","text":"<p>Risk that can\u2019t be measured; admitting that you don\u2019t know what you don\u2019t know.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#aumanns-agreement-theorem","title":"Aumann\u2019s Agreement Theorem","text":"<p>If you understand your opponent\u2019s beliefs you cannot agree to disagree. If you agree to disagree it\u2019s because one side doesn\u2019t understand the other side\u2019s view.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#focusing-effect","title":"Focusing Effect","text":"<p>Overemphasizing factors that seem important but exist as part of a complex system. People from the Midwest assume Californians are happier because the weather is better, but they\u2019re not because Californians also deal with traffic, bad bosses, unhappy marriages, etc, which more than offset the happiness boost from sunny skies.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#the-middle-ground-fallacy","title":"The Middle Ground Fallacy","text":"<p>Falsely assuming that splitting the difference between two polar opposite views is a healthy compromise. If one person says vaccines cause autism and another person says they don\u2019t, it\u2019s not right to compromise and say vaccines sometimes cause autism.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#rebound-effect","title":"Rebound Effect","text":"<p>New symptoms, or supercharged old symptoms, emerge when medicine or other protections are withdrawn.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#ostrich-effect","title":"Ostrich Effect","text":"<p>Avoiding negative information that might challenge views that you desperately want to be right.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#founders-syndrome","title":"Founder\u2019s Syndrome","text":"<p>When a CEO is so emotionally invested in a company that they can\u2019t effectively delegate decisions.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#in-group-favoritism","title":"In-Group Favoritism","text":"<p>Giving preference to people from your social group regardless of their objective qualifications.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#bounded-rationality","title":"Bounded Rationality","text":"<p>People can\u2019t be fully rational because your brain is a hormone machine, not an Excel spreadsheet.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#luxury-paradox","title":"Luxury Paradox","text":"<p>The more expensive something is the less likely you are to use it, so the relationship between price and utility is an inverted U. Ferraris sit in garages; Hondas get driven.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#meat-paradox","title":"Meat Paradox","text":"<p>Dogs are family, pigs are food. Some animals classified as food are wrongly perceived to have lower intelligence than those classified as pets. An example of morality depending on utility.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#fluency-heuristic","title":"Fluency Heuristic","text":"<p>Ideas that can be explained simply are more likely to be believed than those that are complex, even if the simple-sounding ideas are nonsense. It occurs because ideas that are easy to grasp are hard to distinguish from ideas you\u2019re familiar with.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#historical-wisdom","title":"Historical Wisdom","text":"<p>\u201cThe dead outnumber the living 14 to 1, and we ignore the accumulated experience of such a huge majority of mankind at our peril.\u201d \u2013 Niall Ferguson</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#fact-check-scarcity-principle","title":"Fact-Check Scarcity Principle","text":"<p>This article is called 100 Little Ideas but there are fewer than 100 ideas. 99% of readers won\u2019t notice because they\u2019re not checking, and most of those who notice won\u2019t say anything. Don\u2019t believe everything you read.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#emotional-contagion","title":"Emotional Contagion","text":"<p>One person\u2019s emotions trigger the same emotions in other people, because evolution has selected for empathizing with those in your social group whose actions you rely on.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#tribal-affiliation","title":"Tribal Affiliation","text":"<p>Beliefs can be swayed by identity and a desire to fit in over rational analysis. There is little correlation between climate change denial and scientific literacy. But there is a strong correlation between climate change denial and political affiliation.</p>"},{"location":"archives/2020/2020-03-01-many-ideas/#emotional-competence","title":"Emotional Competence","text":"<p>The ability to recognize others\u2019 emotions and respond to them productively. Harder and rarer than it sounds.</p>"},{"location":"archives/2020/2020-04-25-motivation/","title":"What's my Motivation?","text":"<p>When you need a swift kick in the butt, just listen-</p> <p>.</p> <p>Some key take-aways</p> <ul> <li>Nelson Mandela said, \"There is no passion to be found playing small and  settling for a life that's less than the one you're capable of living...\" </li> <li>If I'm going to fall, I don't want to fall back on anything.  I want to fall FORWARD.</li> <li>...So do what you feel passionate about.  Take chances.  Don't be afraid to fail. ... Don't be afraid to think outside the box.  Don't be afraid to FAIL BIG.</li> <li>Reggie Jackson struck out 2600 times in his career, the most in the  history of baseball.  But you don't hear about the strikeouts.  People  remember the homeruns.  </li> <li>Every failed experiment is one step closer to success.  </li> <li>You WILL FAIL at some point in your life.  Accept it.  You will lose.  You will embarrass yourself.  You will suck at something.  There is  no doubt about it. </li> <li>If you don't fail, you're not even trying.  </li> <li>To get something you never had, you have to do something you never did.</li> </ul> <p>.</p> <p>For a more thorough ass-kicking, listen to this one-</p> <p>.</p> <p>Thinking about the hard times...</p> <p></p>"},{"location":"archives/2020/2020-11-28-potpourri/","title":"Potpourri of items","text":""},{"location":"archives/2020/2020-11-28-potpourri/#import-module-versus-from-module-import-foo-in-python","title":"Import module versus from module import foo in Python","text":"<p>This question had always bugged me.  There are two ways to import modules in Python.  </p>"},{"location":"archives/2020/2020-11-28-potpourri/#import-module","title":"import module","text":"<ul> <li>Simplest way to import a module</li> <li>However must require using the name of the module as a prefix before   a module's class or function- like module.foo.  One way around this is   to use import module as mo.  Then you can use mo.foo.</li> </ul>"},{"location":"archives/2020/2020-11-28-potpourri/#from-module-import-foo","title":"from module import foo","text":"<ul> <li>No need to use module namespace prefix to use foo.  Can import individual functions or classes.</li> <li>However, problem with no module namespace prefix means readers have no idea where a function   or class comes from.</li> <li>from module import * adds all items from module into current namespace- which is horrible.  </li> </ul>"},{"location":"archives/2020/2020-11-28-potpourri/#the-zen-of-python","title":"The Zen of Python","text":"<p>From Python Python Enhancement Proposal (PEP) #20</p> <pre><code>Beautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!\n</code></pre>"},{"location":"archives/2020/2020-11-28-potpourri/#the-agile-manifesto","title":"The Agile Manifesto","text":""},{"location":"archives/2020/2020-11-28-potpourri/#scrum","title":"Scrum","text":""},{"location":"archives/2020/2020-11-28-potpourri/#lean-software","title":"Lean Software","text":""},{"location":"archives/2022/2022-12-31-colors/","title":"Design colors","text":"<p>To get to easy, you have to get through hard.</p> <p> </p>"},{"location":"archives/2022/predictions/","title":"Predictions","text":"<p>For 2023, as compiled on 2022-12-29</p>"},{"location":"archives/2022/predictions/#gs-outlook","title":"GS outlook","text":"<ul> <li>Recession at 30% probability, core inflation falls to 3%, +1% increase to unemployment rate.</li> <li>Peak short term interest rate at 5.25%, no cuts in 2023.</li> <li>Rate hikes +25bp each in Feb, Mar, and May 2023.</li> <li>Recession in Europe caused by increased energy costs.</li> </ul>"},{"location":"archives/2022/predictions/#cs-outlook","title":"CS outlook","text":"<ul> <li>No recession, GDP +0.8%\uff0cinflation falls to 3.8%.</li> <li>Pullback of globalization, global trade to decline.</li> <li>Invest in defensive sectors- healthcare, infrastructure, and silver.</li> </ul>"},{"location":"archives/2022/predictions/#fidelity-outlook","title":"Fidelity outlook","text":"<ul> <li>More deglobalisation, reshoring, opportunities for Thailand and Vietnam.</li> <li>Equities prices still high, volatility to continue, stay defensive.</li> <li>Stay in cash and uncorrelated assets, govt bonds.</li> <li>Central bank can remain excessively hawkish and overshoot rate raises.</li> <li>Credit default spreads not currrently priced in for recession as of Nov 2022.</li> </ul>"},{"location":"archives/2022/predictions/#blackrock-outlook","title":"Blackrock outlook","text":"<ul> <li>Inflation cannot be contained without crushing demand.</li> <li>Recession is inevitable.  Reprice equities and add bonds.  </li> <li>Go with inflation-linked bonds. </li> </ul>"},{"location":"archives/2022/predictions/#bny-mellon","title":"BNY Mellon","text":"<ul> <li>Mild recession 70% probability, recovery expected at end of 2023.</li> <li>Inflation goes down to near 2%. </li> <li>Fed central bank raises short term rates and hold at around 5% in mid-2023.</li> <li>Bonds with higher yields become attractive investment options.</li> </ul>"},{"location":"archives/2022/think/","title":"Think","text":""},{"location":"archives/2022/think/#recharge","title":"Recharge","text":""},{"location":"archives/2022/think/#fail-forward","title":"Fail forward","text":"<p>If you don't fail, you're not even trying... To get something you never had, you have to do something you never did... Every failed experiment is one step closer to success.  You've got to take risks... First you will fail at some point in your life.  Accept it.  You will lose.  You will embarrass yourself.  You will suck at something.  There is no doubt about it.... I didn't get the job.  But here's the thing.  I didn't quit.  I didn't fall back.  I walked out of there to prepare for the next audition and the next.   I prayed.  And I prayed.  But I continued to fail and fail and fail.  But it didn't matter because you know what?  There's an old saying- 'If you hang around the barber shop long enough sooner or later you're going to get a haircut'.  So you will catch a break.  I did catch a break...  Denzel Washington</p> <p>Respect</p>"},{"location":"archives/2022/think/#enlightenment","title":"Enlightenment","text":""},{"location":"archives/2022/think/#generations","title":"Generations","text":"<p>Imagine a contemporary human on a beach holding her mother's hand.  Then picture the mother in turn holding the hand of her own mother.  Then with your imagination, extend this hand-holding chain additional generations into the past.  When this imagined chain of ancestors reaches about 300 miles (480km) in length (this takes 500,000 generations), it will have reached the point where the mother at the head of the line resembles the beings we call chimpanzees.  Keep in mind that we started with humans, and that, of course, all the mothers and daughters are directly related to one another.  Richard Dawkins</p> <p>There was no single first human.  Just as we cannot say for sure where yellow begins exactly on a rainbow- there is no clear point in time one's mother was a chimp-like ape whose daugher was a human.</p>"},{"location":"archives/2022/think/#deep","title":"Deep","text":""},{"location":"archives/2022/think/#_1","title":"\u5251\u5ba2","text":"<p>\u5341\u5e74\u78e8\u4e00\u528d \u971c\u5203\u672a\u66fe\u8a66 \u4eca\u65e5\u628a\u793a\u541b \u8ab0\u6709\u4e0d\u5e73\u4e8b \u8cc8\u5cf6</p>"},{"location":"archives/2022/think/#_2","title":"\u65e0\u6094\u8fd9\u4e00\u751f","text":"<p>\u6ca1\u6709\u6cea\u5149\u98ce\u91cc\u52b2\u95ef \u6000\u7740\u5fc3\u4e2d\u65b0\u5e0c\u671b \u80fd\u51b2\u4e00\u6b21  \u591a\u4e00\u6b21 \u4e0d\u606f\u81ea\u5f3a \u6ca1\u6709\u6cea\u5149\u98ce\u91cc\u52b2\u95ef \u91cd\u690d\u6839\u4e8e\u5c0f\u5c9b\u5cb8 \u5982\u5929\u53ef\u53d8\u98ce\u53ef\u8f6c \u4e0d\u606f\u81ea\u5f3a  \u8fd9\u65b9\u5411 \u5362\u56fd\u5b8f</p> <p>From Beyond.  No regrets in this life.</p>"},{"location":"archives/2022/think/#_3","title":"\u56de\u4e61\u5076\u4e66","text":"<p>\u5c11\u5c0f\u79bb\u5bb6\u8001\u5927\u56de \u4e61\u97f3\u65e0\u6539\u9b13\u6bdb\u8870 \u513f\u7ae5\u76f8\u89c1\u4e0d\u76f8\u8bc6 \u7b11\u95ee\u5ba2\u4ece\u4f55\u5904\u6765 \u8d3a\u77e5\u7ae0 </p>"},{"location":"archives/2022/think/#hilarity","title":"Hilarity","text":""},{"location":"archives/2022/think/#speed-reading","title":"Speed reading","text":"<p>I took a course in speed reading, learning to read straight down the middle of the page, and was able to go through War and Peace in 20 minutes. It's about Russia.   Woody Allen</p>"},{"location":"archives/2022/think/#language","title":"Language","text":"<p>A professor was discussing how grammar varied across the world's languages.  'Whilst in some languages a double negative gives a positive, and in other languages a double negative expresses a negative, there are no known languages in which a double positive results in a negative.' From the back of the lecture theater in tones of heavy sarcasm was heard: 'Yeah, yeah.'   Unknown</p>"},{"location":"archives/2022/think/#full-of-shit","title":"Full of shit","text":"<p>Steve Jobs had managed to get Don Knuth, the legendary Stanford professor of computer science, to give a lunchtime lecture to the Mac team. Knuth is the author of at least a dozen books, including the massive and somewhat impenetrable trilogy \"The Art of Computer Programming.\" I was sitting in Steve's office when Lynn Takahashi, Steve's assistant, announced Knuth's arrival. Steve bounced out of his chair, bounded over to the door and extended a welcoming hand. \"It's a pleasure to meet you, Professor Knuth,\" Steve said. \"I've read all of your books.\" \"You're full of shit,\" Knuth responded.</p>"},{"location":"archives/2022/think/#efficient-markets","title":"Efficient markets","text":"<p>\"Isn't that a $10 bill lying on the ground?\" asks the student.</p> <p>\"No, it can't be a $10 bill,\" answers the professor.  \"If it were,  someone would have picked it up by now.\" </p> <p>The professor walks away, and the student picks it up and has a beer.</p>"},{"location":"archives/2022/Finance/Stats/","title":"Statistics","text":""},{"location":"archives/2022/Finance/Stats/#basic-definitions","title":"Basic definitions","text":"<ul> <li>A parameter is a number describing a whole population (eg. population mean). </li> <li>A statistic is a number describing a sample (eg. sample mean). </li> <li>A normal distribution is just one out of an infinite number of bell-shaped distributions, with a specific qualities.</li> <li>A random variable </li> </ul> <p>central limit theorem</p> <p>margin of error</p> <p>hypothesis, t-stat</p>"},{"location":"archives/2022/Finance/Trading/","title":"Trading","text":""},{"location":"archives/2022/Finance/Trading/#options","title":"options","text":""},{"location":"archives/2022/Finance/Trading/#market-making","title":"market making","text":"<p>MM buys and sell options and earns the bid-ask spread.  </p> <p>Suppose MM sells a 1 call option contract, making him delta negative.  He needs to hedge the negative delta by buying the underlying equity.  If the delta is  0.05, then on 1 option contract, he'd need to buy 5 shares of the underlying  equity.  With 1 short call and 5 shares, the MM becomes delta neutral.</p> <p>If the price of the underlying goes up, the call option delta also goes up.  This means the MM is again not hedged.  For example, if the delta goes to 0.10, the MM would need to hold 10 shares.  Since he already holds 5 shares, he'd go  buy another 5 shares for a total of 10 shares- making him delta neutral.</p> <p>Now if the call becomes in-the-money and the delta reaches 1.0, the MM needs to hold 100 shares of the underlying, in the event the call holder exercises  and the MM needs to hand over the 100 shares.</p>"},{"location":"archives/2022/Finance/Trading/#implied-volatility","title":"implied volatility","text":"<p>Once news about a company goes public, the IV should go down- because the  unknown becomes known.  When the IV goes down, option prices go down as well-  because by definition, option prices are built on intrinsic and extrinsic  information.  IV is part of the extrinsic. </p>"},{"location":"archives/2022/Finance/Trading/#extrinsic-value","title":"extrinsic value","text":"<p>The more time to expiration, the more it's going to be worth- from its  extrinsic value- made of implied volatility and time value.</p>"},{"location":"archives/2022/Finance/Trading/#calendar-call-spread","title":"calendar call spread","text":"<p>Calendar call spread is a play on IV.  A closer to expiration option has lower IV than a longer to expiration option.</p> <p>Buying and selling of options with the same strike price but with different expirations.  A basic calendar call spread would be 1) sell short DTE call  and 2) buy long DTE call.  The short DTE would have negative vega and the long DTE would have positive vega.  Overall, the vega is positive which means for  every increase in IV, the overall option price would go up. </p>"},{"location":"archives/2022/Finance/Trading/#vega","title":"vega","text":"<p>Vega is the change in option price for each 1% move in implied vol. This is a first derivative.  Vega is higher in ATM options and longer DTE.</p>"},{"location":"archives/2022/Finance/Trading/#gamma","title":"gamma","text":"<p>Gamma is the change in delta for each move in the underlying equity's price.  In physics terms, it is acceleration, a second derivative. </p>"},{"location":"archives/2022/Finance/Trading/#gamma-squeeze","title":"gamma squeeze","text":"<p>Gamma squeeze is a self-reinforcing push up effect motivated by call option  holders.  The call seller is required to buy up the underlying equity to  delta neutral is short call positions.  This buying in effect pushes up the  price of the underlying further- which increases the call's delta, further requiring the call seller to buy more underlying.  For an equity with few shares outstanding, this behavior induces further buying and higher underlying equity prices. </p> <p>In effect, the underlying reason for a gamma squeeze are the market makers' need to remain delta neutral. </p>"},{"location":"archives/2022/Finance/Trading/#fixed-income","title":"fixed income","text":""},{"location":"archives/2022/Finance/Trading/#the-fed","title":"the fed","text":"<p>The role of central banks such as the Federal Reserve- is to maintain a stable and growing economy through price stability and full employment.  The Fed has two primary tools in its toolbox: </p> <ul> <li>Setting short term interest rates.  The Fed controls the short end of the  yield curve.</li> <li>Buying or selling treasury notes and bonds through open market operations.<ul> <li>Selling bonds to the public takes away cash from the public.  This  lowers the money supply- and reduces demand for goods.  This is a tool to use for lowering inflation.  During World War II, Uncle Sam sold bonds to the public not to finance the war, but to reduce demand for other goods and reduce inflation.</li> <li>Buying bonds from the public puts money into the hands of the public. This stimulates the economy.  This is a tool to use during weak economic  times to flood the market with money.  \"Quantitative easing\" is this form of open market bond purchases.  Bidding up bonds also causes long term  interest rates to fall.</li> </ul> </li> </ul>"},{"location":"archives/2022/Linux/KernelBypass/","title":"Kernel Bypass","text":""},{"location":"archives/2022/Linux/KernelBypass/#openonload","title":"OpenOnload","text":"<p>OpenOnload is software used for kernel bypass to work with Solarflare network  cards.  By redirecting network IO to run through its own stack in/out of its network card, applications can avoid network traffic latency encountered when  relying on the kernel to send or receive data.  With all things kernel related, your application must wait its turn depending on the whim of the kernel  scheduler.  Other latencies are caused by data copies and context switching when apps switch from kernel to user mode.</p>"},{"location":"archives/2022/Linux/KernelBypass/#onload","title":"onload","text":"<p>onload is the application to run Solarflare's kernel bypass software.  We need to optimize onload settings for each application.  Dued to the paucity of  optmisation tips on the net, I've put together some battle-field notes for  optimising onload. </p> <p>Use onload_stackdump to peek into onload stats and see which area needs  tweaking.</p> <pre><code>onload_stackdump lots\n</code></pre> <p>Here are some areas that need looking into for each onloaded application:</p> <ol> <li>packet buffers</li> <li>kernel polls </li> <li>interrupts</li> <li>packet drops</li> <li>lock contentions</li> </ol>"},{"location":"archives/2022/Linux/KernelBypass/#packet-buffers","title":"packet buffers","text":"<p>Check for the following statistics reported by onload_stackdump:</p> <pre><code>pkt_scramble0\npkt_scramble1\npkt_scramble2\nmemory_pressure_enter\nmemory_pressure_drops\n</code></pre> <p>The onload documentation states for each stat:</p> <p>pkt_scramble0 is the number of times onload scrambled to find free buffers for  L0 cache.  This is an indication of severe memory pressure. pkt_scramble1 and  pkt_scramble2 are similar counts for L1 and L2 caches. </p> <p>memory_pressure_enter is the number of times onload has entered 'memory  pressure' state.  memory_pressure_drops is the number of packets dropped  due to 'memory pressure'. </p> <p>Onload documentation states \"When Onload detects a stack is close to allocating all available packet buffers, it will take action to try and avoid packet buffer exhaustion.  Onload will automatically start dropping packets on receive and, where possible, will reduce the receive descriptor ring fill level in an attempt to alleviate the situation.\" </p> <p>For memory related issues, the documentation suggests bumping up EF_MAX_PACKETS. This setting controls the maximum number of packet buffers that can be used by the Onload stack. By default, updating EF_MAX_PACKETS also updates parameters EF_MAX_RX_PACKETS and EF_MAX_TX_PACKETS to 75% of EF_MAX_PACKETS.</p> <p>While increasing EF_MAX_PACKETS should be beneficial to preventing memory  pressure problems, the downside of increasing this value too high is a larger memomry footprint and resulting latency. </p>"},{"location":"archives/2022/Linux/KernelBypass/#kernel-polls","title":"kernel polls","text":"<p>Onload_stackdump shows the number of times a socket event was polled from the  kernel versus user space, with the latter being preferred.  Examples:</p> <pre><code>k_polls: 34441\nu_polls: 1870340303\n</code></pre> <p>k_polls is the number of times the socket event queue was polled from the  kernel while u_polls is the number of times the socket event queue was  polled from user space.  We'd much prefer applications to read socket events  from user space- bypassing kernel scheduling and data copies and context  switching. </p> <p>If k_polls &gt; u_polls, then one parameter to try is EF_POLL_USEC.  This setting  gets onload to continuously poll in user space for the set number of microseconds..</p> <p>When an application reads from a socket and no data is available, the call will enter the OS kernel and block.  When data becomes available, the network adapter will interrupt the CPU, allowing the kernel to reschedule the application to continue.  Blocking and interrupts are relatively expensive operations.</p> <p>Onload can be configured to spin on the processor in user mode for up to  a specific number of microseconds waiting for data from the network. If the spin period expires the processor will revert to conventional blocking behavior.  Non-blocking sockets will always return immeidately as these are  unaffected by spinning.</p> <p>If a cpu core can be dedicated to each thread that blocks waiting for network  IO, then spinning is the best method to achieve the lowest possible latency.</p> <p>The documentation suggests using EF_POLL_USEC to increase the timeout a user polls sockets before blocking- which then would require an interrupt wakeup  from the kernel.  While this suggestion may work for single-threaded applications,  the downside of a higher poll timeout can also block other threads from polling. No one solution works for all applications.  The proper setting depends on the  number of threads polling sockets and the level of incoming or outgoing data.</p>"},{"location":"archives/2022/Linux/KernelBypass/#interrupts","title":"interrupts","text":"<p>Onload_stackdump shows counts for each event- such as the number of data  receive/sent events and the number of times an interrupt was used to poll.  Examples:</p> <pre><code>rx_evs: 2092752987\ntx_evs: 25770\ninterrupt_polls: 6688961\ninterrupt_evs: 12014176\ninterrupt_wakes: 5336668\n</code></pre> <p>rx_evs and tx_evs are the number of events received and transmitted,  respectively.  interrupt_polls is the number of times the stack is polled and invoked by interrupts.  interrupt_evs is the number of events processed invoked by interrupts.  Lastly, interrupt_wakes is the number of times the application is woken by interrupt.</p> <p>A high number of events handled by interrupts relative to the total number of  packet receive events could mean latency caused by relying on interrupts. </p> <p>The documentation advises setting a higher EF_POLL_USEC.  This gets polls  to continuously poll the socket before timing out and then relying on interrupts to get data.  This reduces the number of interrupts- and context switches-  for reading socket packets.  But a higher poll timeout comes with a cost of  blocking other threads from polling.  Finding the optimial setting requires testing. </p>"},{"location":"archives/2022/Linux/KernelBypass/#packet-drops","title":"packet drops","text":"<p>Packet losses over the network harm performance.  The Linux tool ethtool  identifies packet drops. </p> <pre><code>ethtool -S &lt;interface&gt; | grep drop\n    rx_noskb_drops: 0\n    port_rx_nodesc_drops: 504905630\n    port_rx_dp_di_dropped_packets: 1016728\n</code></pre> <p>rx_noskb_drops is the number of packets dropped when there are not enough socket buffers.  port_rx_nodesc_drops is the number of packets dropped  when there are no further descriptors in the rx ring buffer. port_rx_dp_di_dropped_packets is the number of packts dropped by filters. </p> <p>Onloa's documentation says \"If packet loss is observed at the network level  due to a lack of receive buffering try increasing the size of the receive  descriptor queue size via EF_RXQ_SIZE.  If packet drops are observed at the socket level, it may also be worth experimenting with socket buffer sizes  via EF_UDP_RCVBUF.  Setting EF_EVS_PER_POLL to a higher value may also  improve efficiency\".</p> <p>A larger rx ring buffer with a larger EF_RXQ_SIZE can absorb larger packet bursts without drops but at an increase in process memory working set size.</p> <p>EF_EVS_PER_POLL sets the number of hardware network events to handle before  performing other work.  This setting presents a trade-off- larger values  increase batching- which usually improves efficiency- but may also increase the working set size- which could harm efficiency. </p>"},{"location":"archives/2022/Linux/KernelBypass/#lock-contentions","title":"lock contentions","text":"<p>Onload's documentation states, \"When threads share a stack,a thread holding  the stack lock blocks another thread.\"  High coutns in the stats  interrupt_lock_contends, periodic_lock_contends, and  timeout_interrupt_lock_contends can identify these lock contentions. </p> <p>The documentation suggests to use EF_STACK_PER_THREAD to create a stack  per thread.  If a multi-threaded application is doing lots of socket operations, stack lock contention will lead to send/receive performance jitter.  In such  cases improved perofmrance can be had when each contending thread has its own stack.  This can be managed with EF_STACK_PER_THREAD which creates a separate Onload stack for the stocks created by each thread.</p> <p>If using EF_STACK_PER_THREAD, it may also be possible to bump up EF_POLL_USEC since each user-space poll now no longer blocks other threads.</p>"},{"location":"archives/2022/Linux/KernelBypass/#network-stack","title":"network stack","text":""},{"location":"archives/2022/Linux/KernelBypass/#typical-network-flow","title":"typical network flow","text":"<p>Data packets flow from the TX application to the RX listener application.</p> <pre><code>TX                      RX\n-------------           -------------\nApplication             Application\nTransport (L4)          Transport (L4)\nNetwork (L3)            Network (L3)\nData link (L2)          Data link (L2)\nNIC driver              NIC driver\nNIC hardware            NIC hardware\n</code></pre> <p>Contents of a data packet:</p> <pre><code>Ethernet header\n    dest MAC, src MAC, type of next structure\nIP header\n    length, IP type, header checksum, src IP, dest IP\nTCP header\n    src IP, dest IP, checksum\npayload\nchecksum\n</code></pre>"},{"location":"archives/2022/Linux/KernelBypass/#rx-path","title":"rx path","text":"<pre><code>Applications            in user space\n--------------------------------------\nNIC driver              in kernel space\ntx and rx ring buffer   --&gt; packet buffers\nNIC\n</code></pre> <p>The NIC driver preallocates packet buffers and the tx and rx ring buffers. Also, tx and rx ring buffers are shared between NIC and NIC driver.</p> <p>What happens when a NIC receives a data packet?  It matches the incoming packet's MAC address to the NIC's MAC address.  Next it verifies the ethernet checksum.</p> <p>Next the NIC copies the data packet to the rx ring buffer using direct memory access (DMA).  DMA alleviates any work by the cpu.  The NIC then triggers an interrupt to notify the NIC driver there is incoming data.</p> <p>The cpu interrupts the process in execution.  It switches to kernel space to 1) lookup the Interrupt Descriptor Table (IDT), 2) execute the interrupt's registered service routine (ISR).  Then the cpu acks the interrupt and switches back to user space.</p> <p>Later, the cpu enters the kernel space again- this time driven by the NIC driver.  The NIC driver dynamically allocates an sk buffer (skb) and update its data structure with packet metadata.  The NIC driver removes the ethernet header and then passes skb to the network stack.</p> <p>The NIC driver calls L3 layer handling- verifying the IP addresses, checksums, combines fragmented packets and then calls the higher L4 protocol handler.</p> <p>The L4 layer enqueues the skb to the socket read queue.  The skb points to the address of the data in the packet buffer.  Then it signals the socket.</p> <p>The application in the user space reads the socket- with a system call that  switches the process mode to kernel space.  This dequeues the packet from  the socket receive queue, copies the packet to the application buffer,  releases the skb and then returns control back to user space and to the user  app.</p>"},{"location":"archives/2022/Linux/KernelBypass/#overheads","title":"overheads","text":"<p>There are too many context switches- back and forth from user to kernel modes.</p> <p>There is context switching during a system read call.  There is a packet copy before/during the read process.  There is a dynamic allocation of skb by the NIC driver.  There is an interrupt for every arriving packet.  What a horrible design.</p> <p>A kernel bypass network stack bypasses all these overheads.  In a KB setup,  there is no context switching (all user space) and there is no packet copy from the kernel to the user handover.</p>"},{"location":"archives/2022/Linux/KernelBypass/#reading","title":"reading","text":"<p>Reading data packets can be done in two ways- via interrupt or via polling. </p> <p>With interrupts, the NIC notifies the cpu a data packet arrived.  Interrupt is a hardware mechanism.  This interrupt handling is slower for high speed traffic.</p> <p>With polling, the cpu keeps checking on the NIC.  This is a software-level mechanism.  The cpu usage is high but this handles high speed traffic.</p>"},{"location":"archives/2022/Linux/Linux/","title":"Linux notes","text":""},{"location":"archives/2022/Linux/Linux/#virtual-memory","title":"virtual memory","text":"<p>The OS makes each process believe it has access to a continuous stretch of  memory stretching from 0 to MAX.  The OS intersperses every process' memory  needs to real physical memory spaces.  The OS handles the virtual to read  memory translations.  The OS divides memory into pages- which it uses to handle mapping a page at a time.  </p>"},{"location":"archives/2022/Linux/Linux/#shared-memory","title":"shared memory","text":"<p>Use shmget system call to read write to the same memory space.  </p>"},{"location":"archives/2022/Linux/Linux/#signals","title":"signals","text":"<p>Use signals to send signals to each process.  Every process has signal handlers for execution in response to each signal.</p>"},{"location":"archives/2022/Linux/Linux/#sockets","title":"sockets","text":"<p>Use sockets to get two processes on the same or different machines to talk to  each other.  With different machines, use TCP or UDP networking protocol.  On same machine, use Unix sockets.</p>"},{"location":"archives/2022/Linux/Linux/#pipes","title":"pipes","text":"<p>Pipes system call returns two file descriptors.  A pipe is a half-duplex  commuication- which means it's only one way.  Regular pipes work in the same  process- shared by parent and child after fork.  Named pipes are for  different processes.</p>"},{"location":"archives/2022/Linux/Linux/#taskset","title":"taskset","text":"<p>taskset binds a process to run on specific cpu cores.  By default, the kernel  decides which core to run a process when its scheduler schedules a process.  However, when we pin a process to a specific core(s), it's less likely for the process to have cache misses- because the process is likely to have already  run on that core previously.  With less cache misses- the process should run  faster overall. </p> <pre><code>taskset -p &lt;pid&gt; -c &lt;cpu-list&gt;\nwhere cpu-list can be a number or a range like 0-9\n</code></pre>"},{"location":"archives/2022/Linux/Linux/#numa","title":"NUMA","text":"<p>NUMA, or non-uniform memory access, is a setup of cpus such that a cluster of  cpus can share memory locally via a local bus instead of the system bus.</p> <p>Cpus need to fetch memory quickly.  However, because multiple cpus  can fetch memory at the same time, this leads to contention and latency.  </p> <p>The idea with NUMA is that small clusters can treat its shared memory as its L3  cache.  Instead of a core reaching out to the system bus to fetch data from the main memory, it can fetch the same data in this shared L3 cache.</p> <p>Comparisons with UMA, uniform memory access</p> <p>UMA</p> <ul> <li>offers limited bandwidth</li> <li>uses a single memory controller, slower than NUMA</li> </ul> <p>NUMA</p> <ul> <li>offers more bandwidth than UMA</li> <li>uses multiple memory controllers, speeds up memory fetches than UMA</li> <li>better for real time applications</li> </ul>"},{"location":"archives/2022/Linux/Linux/#hyperthreading","title":"hyperthreading","text":"<p>Hyperthreading is Intel's name for a hardware technique to run more than one thread  on each core.  It creates two logical (virtual) processors per actual core, each of  which has its own processor state.  Each logical processor runs indepedently of  the other logical processor.  However, both logical processors share the same  (L1/L2/L3?) caches and system bus.  </p> <p>AMD has similar technology called SMT, simulatenous multithreading. Both allow two threads to run in parallel on the same core.  </p> <p>To check whether hyperthreading/SMT is enabled:</p> <pre><code>cat /proc/version\n</code></pre>"},{"location":"archives/2022/Linux/Linux/#low-latency-kernel","title":"low latency kernel","text":"<p>Compared to a regular generic kernel, a low latency kernel- also known as a  real time kernel- context switches more often.  These kernels are tuned to  specific needs.  Generic kernels favor throughput over latency.  Generic kernels want to get things done- with less context switches.  Low latency kernels  favor latency over throughput.  Low latency kernels want to respond to events quicker- with more context switches- consuming more cpu- and usually resulting in lower throughput.</p> <p>To check the kernel version:</p> <pre><code>cat /proc/version\n</code></pre>"},{"location":"archives/2022/Linux/Linux/#multicastunicast","title":"multicast/unicast","text":"<p>Unicast is a one-to-one traffic flow.  If multiple clients request the same data feed from the same server, the server will flood the network with multiple copies of the same data.</p> <p>In a multicast environment, the server only sends one data feed- and it is up  to the switches to forward the data to only the interested clients.</p>"},{"location":"archives/2022/Linux/Linux/#tmux","title":"tmux","text":"<p>Tmux is a terminal multiplexer that allows you to run multiple terminals over a single session.</p> <p>Tmux by default uses an awkward ctrl-b to start all tmux commands. To override default key bindings, add a .tmux.conf file.  The following file makes ctrl-t the keystroke for triggering tmux:</p> .tmux.conf contents<pre><code>    unbind C-b\n    set-option -g prefix C-t\n    bind-key C-t send-prefix\n\n    bind v split-window -h\n    bind s split-window -v\n    unbind '\"'\n    unbind %\n\n    bind h select-pane -L\n    bind l select-pane -R\n    bind k select-pane -U\n    bind j select-pane -D\n</code></pre> Keystroke - Action cheatsheet<pre><code>    ctrl-t s          | split screen horizontally\n    ctrl-t v          | split screen vertically\n    ctrl-t h          | move cursor to pane below\n    ctrl-t j          | move cursor to pane left\n    ctrl-t k          | move cursor to pane above\n    ctrl-t l          | move cursor to pane right\n    ctrl-t ctrl-arrow | expands or shrinks the pane\n    ctrl-t z          | zoom in or out of pane\n    ctrl-t space      | rotate to next layout|\n    ctrl-t u          | swap pane up\n    ctrl-t d          | swap pane down\n    ctrl-t &gt;          | show menu\n    ctrl-t ?          | see list of all tmux commands\n</code></pre> <p>You can lose connection to a terminal for any number of reasons, but the tmux session remains alive behind the scenes if the machine remains up. </p> <p>To check what tmux sessions are still running:</p> <pre><code>tmux ls\n</code></pre> <p>To connect to a specific session: </p> <pre><code>tmux attach -t 0\n</code></pre> <p>To start a tmux session with a specific name like 'mywork':</p> <pre><code>tmux new -s mywork\n</code></pre> <p>To connect to a specific session by name: </p> <pre><code>tmux attach -t mywork\n</code></pre>"},{"location":"archives/2022/Linux/Linux/#systemd","title":"systemd","text":"<p>systemd is used to start, stop and monitor status in Ubuntu.  </p> <ul> <li>list-unit-files</li> <li>start</li> <li>stop</li> <li>restart</li> <li>status</li> </ul>"},{"location":"archives/2022/Linux/Linux/#journalctl","title":"journalctl","text":""},{"location":"archives/2022/Linux/Linux/#vi","title":"vi","text":""},{"location":"archives/2022/Linux/Linux/#proc","title":"proc","text":""},{"location":"archives/2022/Linux/Linux/#lspci","title":"lspci","text":""},{"location":"archives/2022/Linux/Linux/#ethtool","title":"ethtool","text":""},{"location":"archives/2022/Linux/Linux/#top","title":"top","text":""},{"location":"archives/2022/Linux/Linux/#network-time-protocol-ntp","title":"network time protocol ntp","text":""},{"location":"archives/2022/ModernCpp/CuriousUseOfTemplates/","title":"Curious Use of Templates","text":""},{"location":"archives/2022/ModernCpp/CuriousUseOfTemplates/#traditional-use-of-templates","title":"Traditional Use of Templates","text":"<p>Templates in C++ have existed for more than 20 years.  Simply-put, we use templates to reuse code via compile-time inheritance.  A simple example is a function which compares multiplies two numbers, say two doubles.  And let's say we want to reuse the same code to multiply two integers.  A template just hollow out the core logic into a generic function and allow it to be used by any data type.  </p> <p>A simple example is as follows:</p> <pre><code>template &lt;typename T&gt;\nT multiply(T a, T b) {\n    return a * b;\n}\n\n\nint main()\n{\n    assert(multiply(2,3) == 6);\n    assert(multiply(2.0,3.1) == 6.2);  // beware of floating point errors!\n}\n</code></pre> <p>We can apply templates to entire classes as well using the same idea.  That's all fine and dandy.  But what's really interesting is a curious use of templates for solving parent-child relationship issues.</p>"},{"location":"archives/2022/ModernCpp/CuriousUseOfTemplates/#parent-child-include-issues","title":"Parent-Child Include Issues","text":"<p>A very common problem in software is coding parent-child relationships.  A parent keeps a pointer/reference to its child objects.  But what if the child wants to make a callback to its parent?  It'd keep a pointer/reference back to its parents.  This leads to all kinds of dreadful cyclic header include issues.  For example, the child class cannot include the parent class's header because the parent header file already includes the child header file.  </p> <p>The traditional way of breaking this cyclic relationship is to use a 'forward reference'. </p>"},{"location":"archives/2022/ModernCpp/CuriousUseOfTemplates/#using-forward-references","title":"Using Forward References","text":"<p>Let's say a Parent class keeps a pointer to a Child - and the Child wants a pointer back to the Parent.  It can be done this way in traditional C++:</p> <p>In Parent.h</p> <pre><code>#pragma once\n\n#include \"Child.h\"\n\nclass Parent {\nprivate:\n    Child* c_;\n\npublic:\n    Parent() {\n        c_ = new Child(this);\n    }\n};\n</code></pre> <p>And now in the Child's class declaration, it needs to tell the compiler that Parent exists, but the Child header cannot include the Parent header- or else this would lead to cyclic include errors.  To get around this, the Child declaration - can contain a forward reference to a Parent.  This tells the compiler- \"trust me, a Parent type exists, let the linker figure it out at link time.\"</p> <p>In Child.h</p> <pre><code>#pragma once\n\nclass Parent;  // forward reference to Parent\n\nclass Child {\nprivate:\n    Parent* p_;\n\npublic:\n    Child(Parent* p) : p_(p) {\n    }   \n};\n</code></pre> <p>This works.  You can also use smart pointers in place of the raw pointers, but the pattern is the same.  That is great. </p> <p>Only in moderm C++, we don't really want to use pointers too much.  Why?  If we stick to objects and references, we can always be sure a real object exists- and skip checking against nullptrs.   </p>"},{"location":"archives/2022/ModernCpp/CuriousUseOfTemplates/#breaking-includes-with-templates","title":"Breaking includes with Templates","text":"<p>Let's once again use a Parent-Child class relationship, but this time with NO pointers.  We can do this with templates.</p> <p>Let's keep the same Parent-Child idea.  This time, the Parent contains a Child, but a Child with full knowledge of what type of Parent it has.  This is a wild idea- as we will see soon. </p> <p>The Parent class has two functions.  The first function, WakeChild, tickles the Child.  The second function, CallbackFromChild(), is used by the Child to callback the Parent.   Here is the Parent declaration and definition:</p> <pre><code>#pragma once\n\n#include \"Child.h\"\n\nclass Parent {\nprivate:\n    Child&lt;Parent&gt; c_;\n\npublic:\n    Parent() : c_(*this) {\n    }\n\n    void WakeChild() {\n        c_.WakeUp();\n    }\n\n    void CallbackFromChild() {\n        std::cout &lt;&lt; \"Feed Child\\n\";\n    }\n};\n</code></pre> <p>The Child class is much more interesting.  The Child has a templated Parent type- so by definition at compile time, it knows the type of its Parent.  The Child header does not even need to include the Parent's header.  This is the entire beauty of using Templates to break Parent-Child build issues.</p> <pre><code>#pragma once\n\ntemplate &lt;typename TParent&gt;\nclass Child {\nprivate:\n    TParent&amp; p_;\n\npublic:\n    Child(TParent&amp; p) : p_(p) {\n    }   \n\n    void WakeUp() {\n        p_.CallbackFromChild();\n    }\n};\n</code></pre> <p>At compile time, the compiler ensures the parent type has a public method call CallbackFromChild while this Child class can call. </p> <p>To test this code, all that is needed is code like this:</p> <pre><code>    Parent p;\n    p.WakeChild();\n</code></pre> <p>The Parent wakes the Child, which in turn, makes a call back to the Parent.  The is no use of forward references, no use of pointers, and no issues with cyclic include headers.</p> <p>Brilliant.</p> <p>PL.20220531</p>"},{"location":"archives/2022/ModernCpp/Guide/","title":"Street Fighting Guide to Modern C++","text":""},{"location":"archives/2022/ModernCpp/Guide/#map-operator","title":"Map, operator&lt;","text":""},{"location":"archives/2022/ModernCpp/Guide/#unordered_map-hash","title":"Unordered_map, hash","text":""},{"location":"archives/2022/ModernCpp/Guide/#emplace-emplace_back","title":"Emplace, Emplace_Back","text":"<p>When adding new objects to a collection such as a vector, in pre-C++11 days, a caller might create the object first and then insert or push_back this object into the vector.  The STL container, owing to its value-semantics roots, makes a copy of the object.  This duplicate copy is essentially a wasted effort.  Why not just create the object in place, in the container itself?  That is essentially the work of emplace and emplace_back.  </p> <p><pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n#include &lt;string&gt;\n\nstruct HeavyObject\n{\n    std::string name;\n};\n\nint main()\n{\n    std::vector&lt;HeavyObject&gt; v;\n    v.emplace_back(HeavyObject{\"World\"});\n\n    auto iter = v.cbegin();\n    v.emplace(iter, HeavyObject{\"Hello\"});\n\n    std::for_each(v.cbegin(), v.cend(), [](const HeavyObject&amp; h) {\n        std::cout &lt;&lt; h.name &lt;&lt; '\\n';\n    });\n\n    return 0;\n}\n</code></pre> <pre><code>Hello\nWorld\n</code></pre></p>"},{"location":"archives/2022/ModernCpp/Guide/#try_emplace","title":"Try_Emplace","text":"<p>Vectors can contain duplicate objects, whereas a map can only contain unique objects, each with a unique key.  When emplace() tries insert a duplicate object into a map, STL finds the key already existing in the map- and destroys the newly created object.  This is a waste of effort.  Try_emplace() checks for an object's existence first and only creates a new object if it doesn't exist in the map. </p> <p><pre><code>#include &lt;iostream&gt;\n#include &lt;map&gt;\n#include &lt;string&gt;\n\nstruct HeavyObject\n{\n    HeavyObject(std::string ln, std::string fn) : lname(ln), fname(fn) {\n        std::cout &lt;&lt; \"Created \" &lt;&lt; lname &lt;&lt; \" \" &lt;&lt; fname &lt;&lt; '\\n';\n    }\n    std::string lname, fname;\n};\n\nint main()\n{\n    std::map&lt;int, HeavyObject&gt; m;\n    m.try_emplace(1, \"Mouse\", \"Mickey\");\n    m.try_emplace(1, \"Mouse\", \"Mickey\");\n\n    return 0;\n}\n</code></pre> <pre><code>Created Mouse Mickey\n</code></pre></p> <p>Note the parameters passed into try_emplace() are perfectly forwarded to the mapped value's constructor.  Perfect forwarding means the compiler passes on lvalues as lvalues and rvalues as rvalues. </p>"},{"location":"archives/2022/ModernCpp/Guide/#piecewise-construction","title":"Piecewise Construction","text":"<p>Sometimes we have a class with its copy constructor deleted.  Why?  Because we really just want one instance of this class.  Or sometimes we want one instance for performance reasons.  We don't want to worry about unncessary memory allocations and cleanups on the heap at runtime. </p> <p>If a class is not copy-constructible, and if we use it as a key in a map, we run into a problem.  Using emplace or insert normally, we can't create this object as the key and use it in the map, because the map cannot take a copy of this key. </p> <p>This is where a map's piece_wise construction can be used to work around this non-copy-constructable key problem.  Example below.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;map&gt;\n#include &lt;string&gt;\n#include &lt;utility&gt;\n\nstruct MyThing\n{\n    MyThing(std::string ln, std::string fn) :\n        lname(ln), fname(fn) {\n    }\n\n    MyThing(const MyThing&amp;) = delete;\n    MyThing&amp; operator= (const MyThing&amp;) = delete;\n\n    bool operator&lt;(const MyThing&amp; other) const {\n        return (lname &lt; other.lname &amp;&amp; fname &lt; other.fname);\n    }\n\n    std::string lname, fname;\n};\n\nint main()\n{\n    std::map&lt;MyThing, int&gt; m;\n\n//  traditional c++98 style of inserting map items fails\n//  when key object is not copy-constructable\n//  auto item = std::pair&lt;MyThing, int&gt;(MyThing(\"Mouse\", \"Mickey\"), 1);\n//  m.insert(item);\n\n//  this also fails because we cannot create MyThing as a key\n//  m.emplace(MyThing(\"Mouse\", \"Mickey\"),2);\n\n//  this again fails because we cannot create MyThing as a key\n//  m.emplace(\"Mouse\", \"Mickey\", 2);\n\n//  C++17, this fails\n//  m.try_emplace( \"Mouse\", \"Mickey\", 2);\n\n//  C++17, this fails, fails to create a copy of MyThing\n//  m.try_emplace( {\"Mouse\", \"Mickey\"}, 2);\n\n//  C++11, this works, create key and values in-place separately\n    m.emplace(std::piecewise_construct,\n        std::forward_as_tuple(\"Mouse\", \"Mickey\"),\n        std::forward_as_tuple(2) );\n\n    return 0;\n}\n</code></pre>"},{"location":"archives/2022/ModernCpp/Guide/#lambdas","title":"Lambdas","text":"<p>Lambdas are essentially nameless \"anonymous\" functions declared in the code right where they are invoked.  Compared to functions or functors, this locality of declaration saves a lookup in the editor to the inner workings of the function.  On the other hand, readability becomes an issue for overly long lambdas. </p> <p>A point of confusion is a lambda's capture clause of its definition.  A lambda can capture values or references of variables on the stack for use inside its function.  It can even capture a variable by way of a std::move operator (the original variable can no longer be used afterwards).  </p> <p>Tip: use lambdas for short one-to-two liner functions.</p>"},{"location":"archives/2022/ModernCpp/Guide/#example-of-a-functor-and-an-equivalent-lambda","title":"Example of a functor and an equivalent lambda.","text":"<pre><code>    #include &lt;iostream&gt;\n    #include &lt;vector&gt;\n    #include &lt;algorithm&gt;\n\n    struct OddChecker\n    {\n        void operator()(int i)\n        {\n            std::string tmp = (i &amp; 1) ? \"odd\" : \"even\";\n            std::cout &lt;&lt; tmp &lt;&lt; '\\n';\n        }\n    };\n\n    int main()\n    {\n        std::vector&lt;int&gt; v {0,1,2,3};\n\n        std::for_each(v.cbegin(), v.cend(), OddChecker());\n\n        std::for_each(v.cbegin(), v.cend(), [](int i) {\n            std::string tmp = (i &amp; 1) ? \"odd\" : \"even\";\n            std::cout &lt;&lt; tmp &lt;&lt; '\\n';\n        });\n\n        int bump = 3;\n        std::string location(\"bump\");\n        std::for_each(v.cbegin(), v.cend(), [bump, &amp;location](int i) {\n            std::cout &lt;&lt; location &lt;&lt; \" \" &lt;&lt; i+bump &lt;&lt; '\\n';\n        });\n    }\n</code></pre> <pre><code>even\nodd\neven\nodd\neven\nodd\neven\nodd\nbump 3\nbump 4\nbump 5\nbump 6\n</code></pre>"},{"location":"archives/2022/ModernCpp/Guide/#decltype","title":"Decltype","text":"<p>Decltype is used mainly in template meta-programming.  Decltype is used to get type of one variable for use to declare another variable.  Example: </p> <pre><code>float a = 2.0;\ndecltype(a) b = a;\n</code></pre> <p>This usage looks overly convoluted.  Why not use auto instead?  The only practical usage is in building template classes or functions.  Example: </p> <pre><code>#include &lt;iostream&gt;\n\ntemplate&lt;class T, class U&gt;\nauto mul(T x, U y) -&gt; decltype(x*y)\n{\n    return x*y;\n}\n\nint main()\n{\n    double a = 2.0;\n    float b = 3.0;\n\n    auto c = mul(a, b);\n    std::cout &lt;&lt; c &lt;&lt; '\\n';\n}\n</code></pre>"},{"location":"archives/2022/ModernCpp/Guide/#function-templates","title":"Function templates","text":""},{"location":"archives/2022/ModernCpp/Guide/#class-templates","title":"Class templates","text":""},{"location":"archives/2022/ModernCpp/Guide/#type-traits","title":"Type traits","text":""},{"location":"archives/2022/ModernCpp/MakeTips/","title":"Make Tips","text":""},{"location":"archives/2022/ModernCpp/MakeTips/#makefile-how-to","title":"Makefile how-to","text":"<p>The general format of the makefile is:</p> <pre><code>target: dependency1 dependency2\n&lt;tab&gt;   command to build target\n</code></pre> <ul> <li>target is what you want to build, eg: main.o</li> <li>dependency is when to rebuild target when dependency changes, eg: main.cpp</li> <li>command is the compiler command to build target, eg: g++</li> </ul> <p>In Unix, g++ is both a compiler and a linker.</p> <p>Sample makefile:</p> <pre><code>CXXFLAGS = -std=c++17 -Wall -O0 -g \nLDFLAGS = -lgtest -lgtest_main -lpthread\n\n# by default, the first target is the default target\n#\n# build the executable from the binary objects\n\nm03: memory_tests.o\n    $(CXX) $^ -o $@ $(LDFLAGS)\n# g++ -o m03 memory_tests.o \n#\n# macro definitions\n# $@    = the target\n# $?    = all pre-requisites newer than the target\n# #^    = all pre-requisites (dependencies)\n\nmemory_tests.o: memory_tests.cpp\n# use make's default rule for building cpp into o\n#    $(CXX) -c $(CPPFLAGS) $(CXXFLAGS) $^ -o $@\n\n\nclean:\n    rm -f *.o m03   \n</code></pre>"},{"location":"archives/2022/ModernCpp/MakeTips/#compiler-flags","title":"Compiler flags","text":"<ul> <li>C++ build command: g++   -o  <li>Standards: -std=c++11, -std=c++14, -std=c++17, -std=c++20</li> <li>Verbosity: -Wall all warnings, -Werror warnings into error, -Wextra</li> <li>Compiler flags: -DFLAG, -DVAR=1</li> <li>Optimisation: -O0 none, -O2, -O3 more optimisation</li> <li>Debugging: -g build with debugging symbols for gdb debugger</li> <li>Compile only: -c</li>"},{"location":"archives/2022/ModernCpp/MakeTips/#linker-flags","title":"Linker flags","text":"<ul> <li>Verbosity: -Wl</li> <li>Libraries: -lpthread include Posix threads library, -static-libstdc++</li> </ul>"},{"location":"archives/2022/Notes/most/","title":"The Most Important Thing","text":"<p>A book on investment philosophy by Howard Marks.  </p> <p>There is no one most important thing.  Howard Mark's list of eighteen most  important things are ALL important.   They must be thought about all at the same time when investing. Investing is a complex activity.  </p> <p>\"These are the guideposts that keep me on track.\"</p> <p>\"A philosophy has to be the sum of many ideas accumulated over a long period of time from a variety of sources.  One cannot develop an effective philosophy wihtout having been exposed to life's lessons.\"</p> <p>In other words, one develops a style- or a philosophy- from wisdom.  This is  what makes each individual unique because everyone is exposed to different ideas over the course of one's lifetime. </p> <p>\"Experience is what you got when you didn't get what you wanted.\"</p> <p>In other words, one only learns from experiencing pain and failure. </p>"},{"location":"archives/2022/Notes/most/#second-level-thinking","title":"Second Level Thinking","text":"<p>In investing, no single rule always works.  The environment and circumstances never repeats exactly.  (This reminds me of chaos theory where small differences in initial conditions generate huge differences in results over time.) </p> <p>Everyone can accomplish average investment returns- by investing in index funds.  But successful investors want more.  They want to beat the market.</p> <p>Millions compete in the market to generate superior returns, but not everyone can be superior.  Who'd win?  The ones who are a step ahead, the ones with  superior insight and intution.  This is the second level thinking. </p> <p>Others are well armed with information and computer algorithsm.  To do better  than average, you must have something they do not.  You must be more right than others.  You must be different. </p> <p>First level thinking is \"this company is good, let's buy it.\"  Second level  thinking is \"this company is good, let's buy it- but everyone knows it's a  good company.  It's overrated and overpriced, let's sell it.\"</p> <p>Second level thinking is deep, complex and convoluted.  It sounds more like  3D chess- where you're thinking many moves ahead.  First level thinking is the  most simple and direct move, but SLT is thinking further down the horizon.  The workload required for SLT is tremendously greater than for FLT. </p> <p>Conventional first level thinking, following the herd, leads to average to  mediocre performance.  Supeior performance requires thinking other than the  consensus.  It requires you to think different. </p> <p>First level thinkers think the same way the other first level thinkers do-  and they reach the same conclusions.  This cannot beat the market because  collectively, they are the market. </p> <p>To achieve superior results, you have to hold nonconsensus (different) views regarding value and they have to be different. </p> <p>Agreeing with the broad view will not lead to superior results. </p>"},{"location":"archives/2022/Notes/most/#market-efficiency","title":"Market Efficiency","text":"<p>EMT (Efficient Market Theory) says there are many participants in the market with equal access to all relevant information.  Their collection actions  drive market prices to reflect all that is known in the market. </p> <p>Prices already reflect the consensus.  Holding the consensus view then brings  an average return. </p> <p>EMT states that superior returns can be achieved by taking on additional risks.</p> <p>Another ramification of EMT is to give up seeking for superior investments - just invest in a basket of assets, or an index. </p> <p>Howard Marks says EMT cannot be dismissed- and its conclusions are probably true for asset classes that are efficient- where information is publicly known for all investors. </p> <p>However, second level thinkers thrive on inefficiency.  They must find an edge in information or analysis that no one else knows or believes.  </p> <p>An inefficient market is a market that does not contain all known information and can be taken advantage of. </p> <p>No market is completely 100% efficient or 100% inefficient.  The market  efficiency dynamically ranges in between extremes at all times. </p> <p>A market can be inefficient at times- and that's when opportunities sprout up. But at those times, you have to ask questions such as - why haven't others picked up and acted on the same information or analysis?</p> <p>\"I should limit my efforts to relatively inefficient markets where hard work and skill would pay off best.\"</p>"},{"location":"archives/2022/Notes/most/#value","title":"Value","text":"<p>Howard Marks doesn't believe in technical analysis or momentum investing. </p> <p>\"Value investors score their biggest gains when they buy an underpriced  asset, average down unfailingly and have their analysis proved out.  Thus, there are two essential ingredients for profit in a declining market:  you have to have a view on intrinsic value, and you have to hold that view strongly enough to be able to hang in and buy even as price declines suggest that you're wrong.  And third: you have to be right\"</p>"},{"location":"archives/2022/Notes/most/#price-and-value","title":"Price and Value","text":"<p>Let's say you're able to come up with an estimate of intrinsic value for a stock or other asset.  Let's even say your estimate is right.  You're not done.  In order to know what action to take, you have to look at the asset's price relative to its value.\"</p> <p>Howard Marks mentions a investor psychology as a power factor on price.</p> <p>\"Investor psychology can cause a security to be priced just about anywhere in the short run, regardless of its fundamentals.\"</p> <p>\"The key is who likes the investment now and who doesn't.  Future price changes will be determined by whether it comes to be liked by more people or fewer people in the future.\"</p> <p>\"Investing is a popularity contest, and the most dangerous thing is to buy  something at the peak of its popularity.  At that point, all favorable facts and opinions are already factored into its price, and no new buyers are left to emerge.\" </p>"},{"location":"archives/2022/Notes/most/#understanding-risk","title":"Understanding Risk","text":"<p>\"Theory says high return is associated with high risk because the former exists to compensate for the latter.  But pragmatic value investors feel just the  opposite.  They believe high return and low risk can be achieved simulatenously by buying things for less than they're worth.  In the same way, overpaying implies both low return and high risk.\"</p> <p>Let's aim for buying something with good value at a low price.</p> <p>\"Riskier investments are those for which the outcome is less certain.  That is, the probabily distribution of returns is wider.  When priced fairly, riskier investments should entail: - higher expected returns - the possibility of lower returns, and - in some cases, the possibility of losses\"</p> <p>The traditional graph where higher risk means higher returns is not totally  correct.  A high return for higher risk is only one possible outcome for a  range of possible outcomes.  Other possible outcomes are higher losses.  A higher risk asset has a wider range of possible outcomes.</p> <p>\"The most common bell-shaped distrbiution is called the 'normal' distribution. However, people often use the terms bell-shaped and normal interchangeably and they're not the same.  The former is a general type of distribution,  while the latter is a specific bell-shaped distribution with very definite statistical properties.\"</p> <p>\"In the years leading up to the crisis, financial engineers, or 'quants'  played a big part in creating and evaluating financial products such as  deriatvies and structured entitites.  In many cases they made the assumption that future events would be normally distributed.  But the normal distribution assumed events in the distant tails will happen extremely infrequently, while the distribution of financial developments- shaped by humans, with their  tendancy to go to emotion-driven extremes of behavior- should probably be  seen as having 'fatter' tails.  Thus, when widespread mortgage defaults began to occur, events thought to be unlikely befell mortgage-related vehicles on a regular basis.  Investors in vehicles that had been constructed on the basis of normal-distributions, without much allowance for 'tail events' (black swans)  often saw the wheels come off. </p> <p>Investors run for the exits at the same time, and that's when extremes  happen.  This almost relates to the motion of fluids or people in crowded  streets.  When both achieve a critical mass, disasters happen.</p> <p>\"There's a big difference between probability and outcome.  Probable things fail to happen- and improbable things happen- all the time.\"</p> <p>\"Most people view risk taking primarily as a way to make money.  Bearing higher risk generally produces higher returns.  The market has set things up to look  like that'll be the case; if it didn't, people wouldn't make risky investments. But it can't always work that way, or else risky investments wouldn't be risky. And when risk bearing doesn't work, it really doesn't work, and people are  reminded what risk's all about.\"</p>"},{"location":"archives/2022/Notes/most/#recognizing-risk","title":"Recognizing Risk","text":"<p>\"Risk means uncertainty about which outcome will occur and the possibility of loss when the unfavorable ones do.\" </p> <p>High risk comes from paying too much- when the market sentiment is extremely bullish.  This means there is less risk when paying far from the top.</p> <p>\"The risk-is-gone myth is one of the most dangerous sources of risk and a major contributor to any bubble.  At the extreme of the pendulums's upswing, the belief that risk is low and that the investment in question is sure to  produce profits intoxicates the herd and cuases its members to forget caution, worry and fear of loss, and instead to obsess about the risk of missing opportunity.\" </p> <p>This comment is true for every bubble and subsequent crash. </p> <p>\"The recent crisis came about primarily because investors partook of novel,  complex and dangerous things, in greater amounts than ever before.  They took on too much leverage and committed too much capital to illiquid investments. Why did they do these things?  It all happened because investors believed too  much, worried too little, and thus took too much risk.  In short, they believed they were living in a low-risk world.\"</p> <p>\"When everyone believes something embodies no risk, they usually bid it up to  the point where it's enormously risky.  No risk is feared, and thus no reward for risk bearing- no 'risk premium'- is demanded or provided.  That can make the thing that's most esteemed the riskiest.</p> <p>The opposite is also true. </p> <p>\"When everyone believes something is risky, their unwillingness to buy  usually reduces its price to the point where it's not risky at all.  Broadly negative opinion can make it the least risky thing, since all  optimism has been driven out of its price.\"</p>"},{"location":"archives/2022/Notes/most/#controlling-risk","title":"Controlling Risk","text":"<p>What is risk?</p> <p>\"Risk is the uncertainty about which outcome will occur- and the possibility of loss when the unfavorable ones occur.\"</p> <p>Where does risk come from?</p> <p>\"The greatest risk doesn't come from low quality or high volatility.  It comes from paying prices that are too high.\"</p> <p>\"The value investor thinks of high risk and low prospective returns as  nothing but two sides of the same coin.\"</p> <p>The greatest risk is ignoring risk when times have been good for too long.</p> <p>\"In bull markets- usually when things have been going well for a while-  people tend to say, 'Risk is my friend.  The more risk I take, the greater my return will be.  I'd like more risk, please.... When people aren't afraid of risk, they'll accept risk without being compensated for doing so...and risk compensation will disappear.\"</p> <p>\"Worry and its reslatives, distrust, skeptism, and risk aversion, are  essential ingredients in a safe financial system,\"</p>"},{"location":"cheats/git/","title":"Git","text":""},{"location":"cheats/git/#common-commands","title":"Common Commands","text":"<pre><code>git config --global alias.tree 'log --graph --abbrev-commit --oneline' \ngit log --all --decorate --oneline --graph\ngit log branch1 branch2\ngit show (hashid)\ngit merge (branch.to.merge.from)\ngit diff branch1 branch2 --name-only\ngit webdiff branch1 branch2\ngit config --global alias.unstage 'reset HEAD --'\ngit unstage filename\ngit config --global alias.difflast 'diff --cached HEAD^'\ngit log -G\"textToFind\" --online\ngit log -n\ngit diff HEAD~2 HEAD \ncat .git/HEAD   # to find name of current branch\n</code></pre>"},{"location":"cheats/git/#squash","title":"Squash","text":"<pre><code>Compress multiple commits into one commit\n\nBefore\n    (master)v1--&gt;v2--&gt;v3--&gt;v4\n\nAfter\n    (master)v1--&gt;v4\n\nAll changes in v2, v3 and v4 from Before are compressed into v4 in After.\n\nTo do this Squash operation:\n\n1) git rebase -i (v1)\n2) pick v2, squash (s) v3 and v4, save\n3) comment out the comment to remove, save\n</code></pre>"},{"location":"cheats/git/#git-merge","title":"Git merge","text":"<pre><code>Merge copies all feature branch changes to another branch.\n\n\nBefore\n    (master)v1--&gt;v2 \n                  \\ \n                   \\(br)--&gt;b1--&gt;b2\n\nGit merge moves changes b1 and b2 from branch br to the master branch.\n\nAfter\n    (master)v1--&gt;v2--&gt;b1--&gt;b2 \n                  \\\n                   \\(br)--&gt;b1--&gt;b2\n\ngit tree shows\n\n(base) quantboy@ThinkPad:~/dev/test$ git tree\n*   49bf8d4 (HEAD -&gt; master) Merge branch 'br'\n|\\  \n| * 7c5741d (br) b2\n| * 3335395 b1\n* | 8545eca v3\n|/  \n* 11378de v2\n* e97f722 v1\n\n\n==========================\nSteps to reproduce\n==========================\n\nmkdir test\ncd test\ngit init\necho v1 &gt;&gt; file.txt\ngit add .\ngit commit -m \"v1\"\necho v2 &gt;&gt; file.txt\ngit add .\ngit commit -m \"v2\"\ngit checkout -b br\necho b1 &gt;&gt; fileb.txt\ngit add .\ngit commit -m \"b1\"\necho b2 &gt;&gt; fileb.txt\ngit add .\ngit commit -m \"b2\"\ngit checkout master\necho v3 &gt;&gt; file.txt\ngit add .\ngit commit -m \"v3\"\ngit merge br\n</code></pre>"},{"location":"cheats/git/#git-rebase","title":"Git rebase","text":"<pre><code>Before\n\n    (master)v1--&gt;v2--&gt;v3 \n                  \\ \n                   \\(br)--&gt;b1--&gt;b2\n\ngit tree shows\n\n* 75f7798 (HEAD -&gt; br) b2\n* 53cbe04 b1\n* 11a44e7 v2\n* 067f3ca v1\n\nIn branch br, \n\ngit rebase master\n\nAfter\n\n    (master)v1--&gt;v2--&gt;v3 \n                       \\ \n                        \\(br)--&gt;b1--&gt;b2\n\ngit tree shows\n\n* af3ee5e (HEAD -&gt; br) b2\n* 6112718 b1\n* 89dc959 (master) v3\n* 11a44e7 v2\n* 067f3ca v1\n\ngit checkout master\ngit merge br\n\ngit tree shows\n\n* 75f7798 (HEAD -&gt; br) b2\n* 53cbe04 b1\n* 89dc959 v3\n* 11a44e7 v2\n* 067f3ca v1\n\n\n\n==========================\nSteps to reproduce\n==========================\n\nmkdir test\ncd test\ngit init\necho v1 &gt;&gt; file.txt\ngit add .\ngit commit -m \"v1\"\necho v2 &gt;&gt; file.txt\ngit add .\ngit commit -m \"v2\"\ngit checkout -b br\necho b1 &gt;&gt; fileb.txt\ngit add .\ngit commit -m \"b1\"\necho b2 &gt;&gt; fileb.txt\ngit add .\ngit commit -m \"b2\"\ngit checkout master\necho v3 &gt;&gt; file.txt\ngit add .\ngit commit -m \"v3\"\ngit checkout br\ngit rebase master\ngit checkout master\ngit merge br\n\n------------------------------------------------\n\nBefore\n\n    (master)v1--&gt;v2--&gt;v3 \n                       \\ \n                        \\(br)--&gt;b1--&gt;b2\n\nAfter\n\n    (master)v1--&gt;v2--&gt;v3--&gt;b1--&gt;b2 \n                       \\ \n                        \\(br)--&gt;b1--&gt;b2\n\nIn master branch, \n\ngit rebase br\n\ngit tree shows\n\n* af3ee5e (HEAD -&gt; master, br) b2\n* 6112718 b1\n* 89dc959 v3\n* 11a44e7 v2\n* 067f3ca v1\n\nThe upside is that there is less branches to show in the tree log.\nThe downside is that this rewrites the history- so be super careful \nwith remote repositories shared with teammates. \n</code></pre>"},{"location":"cheats/nix/","title":"Nix","text":""},{"location":"cheats/nix/#files","title":"files","text":"<pre><code>fd  = file descriptor\nfd 0    = stdin\nfd 1    = stdout\nfd 2    = stderr\n\nredirect stdout to file:                command &gt; x\n                same as:                command 1&gt; x\nredirect stderr to file:                command 2&gt; x\nredirect stdout to x, stderr to y:      command 1&gt; x 2&gt; y\nredirect stderr and   stdout to x:      command &amp;&gt; x\n                          same as:      command 2&gt;&amp;1 &gt; x\n</code></pre>"},{"location":"cheats/nix/#find","title":"find","text":"<pre><code>find . -name \"pattern\"          # find any objects with a name pattern\nfind . -name \"pattern\" -type f  # find any files with a name pattern\nfind . -mtime -1                # find any objects modified within the past day\nfind . -name \"regex_abc\" -type f -exec grep -nH regex_xyz {} \\;\n        # find any file with regex_abc whose contents contain regex_xyz\n</code></pre>"},{"location":"cheats/nix/#journalctl","title":"journalctl","text":"<pre><code>journalctl -u (name) -n (last-n-lines) -S (since) -U (until)\n\n-u (name)          unit name\n-f                 follow\n-n                 show last 10 entries\n-S --since (datetime)\n-U --until (datetime)\n\nDatetime options include:\n\"2022-01-01 09:00:00\"\n\"2022-01-01\"\n09:00\ntoday\nyesterday\n\"1 hour ago\"\n\"10 minutes ago\"\n</code></pre>"},{"location":"cheats/nix/#vi","title":"vi","text":""},{"location":"cheats/nix/#finding-things","title":"Finding things","text":"<pre><code>f{c}         find the next instance of character \nF{c}         find the previous instance of character\n/{pattern}   find the next instance of pattern\n?{pattern}   find the previous instance of pattern\n*            find the next instance of word under cursor\nn            after find, go to the next instance\nN            after find, go to the previous instance\n</code></pre>"},{"location":"cheats/nix/#replacing-things","title":"Replacing things","text":"<pre><code>:s/old/new/g     replace old with new only on current line\n:n,m s/old/new/g replace old with new only on lines n to m\n:%s/old/new/g    replace old with new globally\n                 %s is special symbol in ed for all rows in file\n</code></pre>"},{"location":"cheats/nix/#vital-ops","title":"Vital ops","text":"<pre><code>u                undo last sequence of change\n</code></pre>"},{"location":"cheats/nix/#buffers","title":"Buffers","text":"<pre><code>:e               select a file to edit from local folder\n:ls              list loaded files in buffers\n:bn              buffer next\n:bp              buffer previous\n:bdelete n       buffer delete n\n</code></pre>"},{"location":"cheats/nix/#windows","title":"Windows","text":"<pre><code>Ctrl-w s         split horizontal window\nCtrl-w v         split vertical window\nCtrl-w h/j/k/l   window jump- up, down, left, right\nCtrl-w Ctrl-w    window cycle\nCtrl-w c         close window\nCtrl-w =         resize window sizes all equal\n</code></pre>"},{"location":"cheats/nix/#visual-blocks","title":"Visual blocks","text":"<pre><code>v                select block by character\nV                select block by line\nCtrl-v           select block\n</code></pre>"},{"location":"cheats/nix/#moving-around","title":"Moving around","text":"<pre><code>$                jump to end of line\ndw               delete word forward\ndaw              delete a word\ndd               delete line\n</code></pre>"},{"location":"cheats/nix/#reformatting","title":"Reformatting","text":"<pre><code>:set textwidth=65\nv\ngq\n</code></pre>"},{"location":"cheats/nix/#bookmarks","title":"Bookmarks","text":"<pre><code>m(c)             mark position with character c\n'(c)             jump back to position c\n</code></pre>"},{"location":"cheats/nix/#macros","title":"Macros","text":"<pre><code>q(r)             record a macro to register r\n@(r)             playback macro r\nn@(r)            playback macro r n number of times\n</code></pre>"},{"location":"cheats/nix/#ssh","title":"ssh","text":"<pre><code>ssh-add -l \nssh-add (file containing private key)\nssh -T git@bitbucket.org\n</code></pre>"}]}