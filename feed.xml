<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Finance Tech Wanderings</title>
    <description>A journal of tech issues in financial applications</description>
    <link>http://patrickleungwl.github.io//</link>
    <atom:link href="http://patrickleungwl.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 09 Sep 2016 10:21:29 +0800</pubDate>
    <lastBuildDate>Fri, 09 Sep 2016 10:21:29 +0800</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Fifteen Years On</title>
        <description>&lt;h2 id=&quot;for-the-public-record&quot;&gt;For the Public Record&lt;/h2&gt;

&lt;p&gt;A quick look at the calendar shows it’s that time of the year again.  The date
creeps up on you.  This year, however- marks the fifteenth year since that
horrible day- a day that’s been seared into my memory.  Fifteen years is a great
number of years that’s passed.  Volumes have already been written to record, 
to analyse, and to reflect on what happened that day.  It seems a proper civic
duty to add my own recollections of that day from my point of view to the public
record.  For this reason- I record the following entry.&lt;/p&gt;

&lt;h2 id=&quot;like-any-other-day&quot;&gt;Like Any Other Day&lt;/h2&gt;

&lt;p&gt;September 11, 2001- was just like any other early autumn day.  I was a young
Goldman Sachs programmer heading into work that morning in Lower Manhattan.  I had
recently transferred to the electronic trading team and was looking forward to a 
day of testing GS’s system with Cantor Fitzgerald’s eSpeed.&lt;/p&gt;

&lt;p&gt;I was slightly peeved when the N train I took to work from Brooklyn stopped 
without explanation at Pacific Street.  Thinking that it was a usual MTA 
malfunction, I walked over to the nearby Atlatnic Street station to transfer to 
the uptown 4 train.  This train took me to the Battery Park Bowling Green
station- which was only 2 blocks away the offices at 125 Broad Street.&lt;/p&gt;

&lt;p&gt;The time was 9:15AM.  I remember the exact time because at that point I was 
slightly peeved at being made tardy for work by the failing public transit
system.  As I rushed up the station exit 
staircase to make up for lost time, a work colleague grabbed me on the shoulder.  He 
was heading in the opposite direction on the way down the station staircase.  In 
terse words, he told me to go home.  Puzzled, I asked why.  He said- “Look up.
Two planes crashed into the World Trade Center.” and quickly disappeared down the stairs.&lt;/p&gt;

&lt;h2 id=&quot;look-up&quot;&gt;“Look Up”&lt;/h2&gt;

&lt;p&gt;Right at the top of the station exit stairs, I arced my head up and looked straight
up Broadway.  Against a cloudless blue sky, I saw huge rising plumes of smoke. 
Fortunately, I was a tech enthusiast- and happened to be carrying a digital camera 
at the time.  Remember- this was back in 2001- in the era before iPhones and 
before iPods.  I took this snapshot-&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../../assets/images/200109/20010911_looking_up_broadway.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Though my colleague had told me what happened, it just didn’t register that what
he said was real.  If the relevation were real, I could only surmise it was 
terrorism.  That thought just did not register in me.  In 2001, terrorism was the sort of
news event that only happened in the Middle East or Africa.  Even though there was 
a WTC bombing in 1994, it was already a forgotten memory.&lt;/p&gt;

&lt;h2 id=&quot;just-get-to-work&quot;&gt;“Just Get To Work”&lt;/h2&gt;

&lt;p&gt;The thought of leaving did not occur to me.  My objective- quite stupefying now
looking back- but oddly rational at the time- was &lt;em&gt;to get to work&lt;/em&gt;.  It must be 
the years of social conditioning that makes someone show up to work even as 
the world burns.&lt;/p&gt;

&lt;p&gt;I walked two blocks eastward to Goldman Sach’s office building at 85 Broad Sreet- 
and found a throng of people gathered at the entrance.  It seemed that just about 
everyone had come down from the building.  Unbeknownst to me at the time- but I 
learned a few days afterwards- my GS colleagues had just witnessed the second 
plane crash into the towers and were making their way out of the building
as I was trying to make my way in.  I guessed that my absence from the office 
could be excused that day.&lt;/p&gt;

&lt;p&gt;At around 9:20AM, I took this snapshot of 85 Broad Street.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../../assets/images/200109/20010911_85_broad.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As can be seen, there was no panic at the time- just a general confusion as 
to what was going on.&lt;/p&gt;

&lt;p&gt;Since there was no way then to get to work- I had no other destination than to
walk up Broadway- &lt;em&gt;towards&lt;/em&gt; the source of the smoke.  Having a digital camera 
available at the time presented an opportunity that further egged me into taking 
a closer look at the smoke.   As I made my way past Wall Street along Broadway, 
the skyscrapers blocked my view of the towers and I could not imagine what was on fire.&lt;/p&gt;

&lt;p&gt;At around 9:25AM, I took a third snapshot of the smoke above lower Manattan 
office buildings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../../assets/images/200109/20010911_smoke_over_lower_manhattan.jpg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;surreal&quot;&gt;Surreal&lt;/h2&gt;

&lt;p&gt;The scene was surreal.  With smoke in the skies, I saw what looked like pieces 
of paper floating down from the sky.  As I walked further up Broadway, I finally reached 
Liberty Plaza.  This plaza, with a clearing void of any buildings- finally 
allowed me to get a good view of the towers.&lt;/p&gt;

&lt;p&gt;What I saw dumbstruck me for a second.  I saw a whole section of one tower was on 
fire.  I raised my camera for this shot.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../../assets/images/200109/20010911_tower_burning.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I took another shot with the camera’s digitial zoom turned on.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../../../../assets/images/200109/20010911_tower_burning_zoom.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I wasn’t sure what I felt.  It was a sense of disbelief.  Was this all 
real?  The amount of black smoke coming out of the building was sobering.  I did
not feel horror- because the strange thing is that I could not imagine what horror 
it was to be inside the floors where the fires were burning.  Adding to the 
surreality of the moment- were loose leaflets floating down weightlessly
from the sky.  They seem to float for an eternity as they fluttered earthbound.&lt;/p&gt;

&lt;p&gt;Then as I ambled around to get a better angle of the view, I saw the second 
tower appear from behind the first- spewing the same maddening amount of black
noxious smoke as the first.&lt;/p&gt;

&lt;p&gt;Finally ran into resistance-&lt;/p&gt;

&lt;!--


No more testing with espeed


bin ladin- feel like american


--&gt;

</description>
        <pubDate>Thu, 08 Sep 2016 00:00:00 +0800</pubDate>
        <link>http://patrickleungwl.github.io//musings/2016/09/08/fifteen-years-on/</link>
        <guid isPermaLink="true">http://patrickleungwl.github.io//musings/2016/09/08/fifteen-years-on/</guid>
        
        <category>history</category>
        
        
        <category>musings</category>
        
      </item>
    
      <item>
        <title>Singapore Math Primary 5 Five Ratio Question 2</title>
        <description>&lt;p&gt;Second challenge question from my kid.  Again it took me some time to work out the problem. 
Singapore math questions are rather more like puzzles than math questions.  What practical 
value do figuring out who has how many pencils serve in real life?&lt;/p&gt;

&lt;p&gt;To solve these questions, one needs some
basic intelligence and an ample supply of heart- also known as perservence- or grit.
Without grit, a weak-minded individual would just give up.  And that’s exactly what
the Singapore government wants.  Singapore math serves nothing more than to separate 
the strong from the weak.  It is a simply a basic sorting tool for this meritocractic society.&lt;/p&gt;

&lt;p&gt;My kid asked me how can I do my job if I get stomped by a primary school question?&lt;br /&gt;
First, the Singapore math question to me is more of a logic puzzle than a math question. 
And second, no one knows everything.  However, the key point is that we do not stay 
stomped.  We use everything in our resources to solve the problem.  We attack the 
problem from different angles.  Sooner or later until ceaseless attacks, the solution
reveals itself.  We are only defeated if we give up.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Kenneth had a total of 576 black and red pens in the ratio 9:7.  After he had given
away an equal number of each type of pens, the number of black and red pens left was
in the ratio 7:4.  How many pens did he give away altogether?
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;I’ve generated the solution 
in &lt;a href=&quot;../../../../../../assets/pdf/20160502.5.ratio.pdf&quot;&gt;this pdf here&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 02 May 2016 00:00:00 +0800</pubDate>
        <link>http://patrickleungwl.github.io//math/singapore/2016/05/02/sg-math-primary-five-ratio/</link>
        <guid isPermaLink="true">http://patrickleungwl.github.io//math/singapore/2016/05/02/sg-math-primary-five-ratio/</guid>
        
        <category>patterns</category>
        
        
        <category>math</category>
        
        <category>singapore</category>
        
      </item>
    
      <item>
        <title>Singapore Math Primary 5 Five Ratio Question</title>
        <description>&lt;p&gt;As my kid has been progressing through the Singapore school system, I’ve never been seriously challenged
by primary school math until now.  I was embarrassingly stomped by the following question.&lt;br /&gt;
It took me some time to figure it out.  I’ve posted the question and answer for everyone’s benefit.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Mr Lee had some red and white paint.  1/3 of the paint was red.  He used 
1/2 of the red paint and 5/6 of the white paint.  In the end, he had
a total of 10 liters of paint left.  How much paint did he have at first?
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;This question gave me a real headache until I found a way out.  I’ve generated the solution 
in &lt;a href=&quot;../../../../../../assets/pdf/20160501.1.ratio.pdf&quot;&gt;this pdf here&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 01 May 2016 00:00:00 +0800</pubDate>
        <link>http://patrickleungwl.github.io//math/singapore/2016/05/01/sg-math-primary-five-ratio/</link>
        <guid isPermaLink="true">http://patrickleungwl.github.io//math/singapore/2016/05/01/sg-math-primary-five-ratio/</guid>
        
        <category>patterns</category>
        
        
        <category>math</category>
        
        <category>singapore</category>
        
      </item>
    
      <item>
        <title>Getting Things Done</title>
        <description>&lt;p&gt;From the book “Getting Things Done Secrets” by Rus Slater- If you want to get on in your career or your
home life you will need to get things done.  In the modern world, however, there are lots of different
people wanting lots of different things to be done, and you can’t do everything for everyone unless you
get much better at a number of different things.&lt;/p&gt;

&lt;h2 id=&quot;knowing-what-things-to-do&quot;&gt;Knowing what things to do&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Recognize that everyone only has 86,400 seconds a day.  Use them wisely.  Time waits for no one.&lt;/li&gt;
  &lt;li&gt;Ask for clear instructions.  If someone asks you to do something for them, make sure you are 100%
certain about what’s required.  Whenever possible, get a written instruction or request- the act of 
writing down instructions makes people think more carefully and fully about what they actually want.
Try to get the request in as much specific detail as possible.  Getting it right first time is always
better than having to come back and do it again.&lt;/li&gt;
  &lt;li&gt;See the relevance of the bigger picture.  Knowing how your tasks relate to the bigger picture
helps both you and your boss to organize the workload.&lt;/li&gt;
  &lt;li&gt;Plan for output, not activity.  Aim for specific achievements.  It is very satisfying to see that
you have achieved something, rather than just spending time doing something.&lt;/li&gt;
  &lt;li&gt;DREAM to get more done.  Delegate it.  Refuse it.  Escalate it.  Action it.  Make a time for it.&lt;/li&gt;
  &lt;li&gt;Have a personal vision or mission.  Write down your long-term career goals and what you need to
do in the medium term to achieve them.&lt;/li&gt;
  &lt;li&gt;Make to-do lists.&lt;/li&gt;
  &lt;li&gt;Find out how others do it.  It is always worth investigating how others may have done a task in
the past.  Then compare it with your task and use your judgement to decide whether to follow a tried
and trusted method or to develop a new, better way.&lt;/li&gt;
  &lt;li&gt;Find out how others do it.  It is always worth investigating how others may have done a task in
the past.  Then compare it with your task and use your judgement to decide whether to follow a tried
and trusted method or to develop a new, better way.&lt;/li&gt;
  &lt;li&gt;Know how to KISS- keep it short and simple.  If you have a choice between a simple and a complex
way to do something, always go for the simple way.&lt;/li&gt;
  &lt;li&gt;Look at effort versus payoff.  Judge every task by cost and reward.  Work first on the tasks
with the least cost and highest return.  By assessing the ratio of effort to payoff, you ensure
that you are doing thing that are worthwhile.&lt;/li&gt;
  &lt;li&gt;Go for quick wins.  A quick win is a personal motivator.  You get to tick something off the
to do list, which means you have a little less left to do and something to say you have finished.&lt;/li&gt;
  &lt;li&gt;Dont say ‘yes’ to every request.  If we say yes to every request, one of two things will happen-
either we will end up working 24 hours a day or we will end up letting people down because we 
said yes to something we cannot do.&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Thu, 07 Apr 2016 00:00:00 +0800</pubDate>
        <link>http://patrickleungwl.github.io//tech/2016/04/07/getting-things-done/</link>
        <guid isPermaLink="true">http://patrickleungwl.github.io//tech/2016/04/07/getting-things-done/</guid>
        
        <category>patterns</category>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>Inspirational Quotes</title>
        <description>&lt;p&gt;“It is not the critic who counts; not the man who points out how the strong man
stumbles, or where the doer of deeds could have done them better.
The credit belongs to the man who is actually in the area,
whose face is marred by dust and sweat and blood;
who strives valiantly; who errs, who comes short again and again,
because there is no effort without error and shortcoming;
but who does actually strive to do the deeds;
who knows great enthusiams, the great devotions;
who spends himself in a worthy cause;
who at the best knows in the end the triumph of high achievement,
and who at the worst, if he fails, at least fails while daring greatly,
so that his place shall never be with those cold and
timid souls who neither know victory or defeat.” 
&lt;em&gt;Thedore Roosevelt&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://myfunnymemes.com/wp-content/uploads/2015/04/There-Are-No-Limits-Only-Plateaus-Quote-By-Bruce-Lee.jpg&quot; width=&quot;480&quot; height=&quot;340&quot; align=&quot;right&quot; hspace=&quot;100&quot; /&gt;
“If you always put limit on everything you do, physical or anything else
it will spread into your work and into your life.  There are no limits.
There are only plateaus, and you must not stay there, you must go beyond
them.”
&lt;em&gt;Bruce Lee&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.thefatlossninja.com/wp-content/uploads/2013/11/bruce-lee.jpg&quot; width=&quot;480&quot; height=&quot;340&quot; /&gt;
Absort what is useful.  Discard what is not.  Add what is uniquely your own.”
&lt;em&gt;Bruce Lee&lt;/em&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 03 Apr 2016 00:00:00 +0800</pubDate>
        <link>http://patrickleungwl.github.io//motivation/2016/04/03/insprirational-quotes/</link>
        <guid isPermaLink="true">http://patrickleungwl.github.io//motivation/2016/04/03/insprirational-quotes/</guid>
        
        <category>quotes</category>
        
        
        <category>motivation</category>
        
      </item>
    
      <item>
        <title>LKY on Management</title>
        <description>&lt;p&gt;Wisdom distilled from some of the great visionary Lee Kuan Yew’s many speeches-&lt;/p&gt;

&lt;h2 id=&quot;constantly-innovate&quot;&gt;Constantly Innovate&lt;/h2&gt;

&lt;p&gt;“Standing still is a sure way to extinction.”&lt;/p&gt;

&lt;p&gt;“We have to move upwards to new niches, find a new path to succeed.  If we succeed, others
will later follow our path but first, we must work out that path and be succeessful. 
We should not brag about our strategies, especially before they have worked…
we must quietly sort our options to test out and implement them.  Some will fail,
but the key ones must succeed if we are to stay ahead and be a beacon for progress.”&lt;/p&gt;

&lt;h2 id=&quot;on-talent&quot;&gt;On Talent&lt;/h2&gt;

&lt;p&gt;“I have learned that one high-calibre mind in charge of a Ministry makes the difference between
success and failure of a major project.  A top mind, given a task, brings together a group
of other able men, organises them into a cohesive team, and away the project goes…”&lt;/p&gt;

&lt;p&gt;“Whenever I had lesser men in charge, the average or slightly above-average, I have had
to keep pushing and probing them, to review problems, to identify roadblocks, to suggest
solutions, to come back and to discover that less than the best has been achieved.  To be
exasperated and, often to be totally frustrated, is the price for not having an able and
talented man in charge.”&lt;/p&gt;

&lt;p&gt;“(English financier) Gresham pointed that bad money drives out good money from circulation.
Well, bad leaders drive out good men from high positions.”&lt;/p&gt;

&lt;p&gt;“Ability can be assessed fairly accurately by a person’s academic record and achievements
at work.  Character is not so easily measured.  After some successes but too many failures,
I concluded that it was more important, though more difficult, to assess a person’s
character.”&lt;/p&gt;

&lt;h2 id=&quot;on-plateaus&quot;&gt;On Plateaus&lt;/h2&gt;

&lt;p&gt;“What I fear is complacency.  When things always become better, people tend to want more
for less work.”&lt;/p&gt;

&lt;h2 id=&quot;deliver-what-you-promise&quot;&gt;Deliver What You Promise&lt;/h2&gt;

&lt;p&gt;“What you say, you must mean, and what you mean, you must deliver.  I always understate
what I intend to do and overachieve.”&lt;/p&gt;

&lt;h2 id=&quot;make-sure-every-button-works&quot;&gt;Make Sure Every Button Works&lt;/h2&gt;

&lt;p&gt;“I want to make sure that every button works and even if you are using it only once in a 
while, please make sure every morning that it works.  And if it doesn’t when I happen to be
around, then somebody is going to be in for a tough time because I do not want sloppiness.”&lt;/p&gt;

&lt;h2 id=&quot;free-of-ideology&quot;&gt;Free of Ideology&lt;/h2&gt;

&lt;p&gt;“If there was one formula for our success, it was that we were constantly studying how to make
things work, or how to make them work better.  I was never a prisoner of any theory.  What
guided me were reason and reality.  The acid test I applied to every theory or scheme was, 
would it work?  This was the golden thread that ran through my years in office.”&lt;/p&gt;

</description>
        <pubDate>Sun, 03 Apr 2016 00:00:00 +0800</pubDate>
        <link>http://patrickleungwl.github.io//management/2016/04/03/lky-on-management/</link>
        <guid isPermaLink="true">http://patrickleungwl.github.io//management/2016/04/03/lky-on-management/</guid>
        
        <category>patterns</category>
        
        
        <category>management</category>
        
      </item>
    
      <item>
        <title>Tech to Study</title>
        <description>&lt;p&gt;A short list of tech to study and review.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://redis.io/topics/introduction&quot;&gt;Redis&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodejs.org/documentation&quot;&gt;node.js&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.codecademy.com/en/tracks/javascript&quot;&gt;javascript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://api.jquery.com&quot;&gt;jQuery&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/14546709/what-is-bootstrap&quot;&gt;Bootstrap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://git-scm.com&quot;&gt;git&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://github.com&quot;&gt;github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ethereum.org&quot;&gt;Ethereum&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://class.coursera.org/bitcointech-001/lecture&quot;&gt;Bitcoin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 02 Apr 2016 00:00:00 +0800</pubDate>
        <link>http://patrickleungwl.github.io//tech/2016/04/02/tech-to-study/</link>
        <guid isPermaLink="true">http://patrickleungwl.github.io//tech/2016/04/02/tech-to-study/</guid>
        
        <category>tech,</category>
        
        <category>study</category>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>Using Tasks-2</title>
        <description>&lt;p&gt;Testing with Tasks again.&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;TestTasks2&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TasksTester&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LogMsg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{0} ThreadId={1} &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;HH:MM:ss.fff&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CurrentThread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ManagedThreadId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;



        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DoWork&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;LogMsg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Background worker starting&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;percentDone&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.0f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;percentDone&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10.0f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;LogMsg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Background worker completed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


        &lt;span class=&quot;c1&quot;&gt;// RunTest
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;//
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// Function run by main thread
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// Main thread sets up the background worker instance
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// and fires it off
&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RunTest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myBkTask&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DoWork&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myBkTask2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DoWork&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;myBkTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;myBkTask2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;nf&quot;&gt;LogMsg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Main thread worker waiting&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;myBkTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;myBkTask2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;nf&quot;&gt;LogMsg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Main thread worker completed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;



        &lt;span class=&quot;c1&quot;&gt;// Main
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// Start up a background worker test instance
&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testWkr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TasksTester&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;testWkr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;RunTest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The output-&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;19:05:48.736 ThreadId=4, Background worker starting
19:05:48.721 ThreadId=1, Main thread worker waiting
19:05:48.735 ThreadId=3, Background worker starting
19:05:50.752 ThreadId=4, Background worker completed
19:05:50.762 ThreadId=3, Background worker completed
19:05:50.762 ThreadId=1, Main thread worker completed
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Sun, 27 Dec 2015 00:00:00 +0800</pubDate>
        <link>http://patrickleungwl.github.io//tech/2015/12/27/tasks2/</link>
        <guid isPermaLink="true">http://patrickleungwl.github.io//tech/2015/12/27/tasks2/</guid>
        
        <category>patterns</category>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>Using Tasks</title>
        <description>&lt;p&gt;Testing usage of Tasks today.&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;TestTasks&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TasksTester&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LogMsg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{0} ThreadId={1} &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;HH:MM:ss.fff&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CurrentThread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ManagedThreadId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;



        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DoWork&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;LogMsg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Background worker starting&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;percentDone&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.0f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;percentDone&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10.0f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;LogMsg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Background worker completed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;AutoResetEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ae&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AutoResetEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ae&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


        &lt;span class=&quot;c1&quot;&gt;// RunTest
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;//
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// Function run by main thread
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// Main thread sets up the background worker instance
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// and fires it off
&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RunTest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;AutoResetEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myFlag&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AutoResetEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;//Action&amp;lt;object&amp;gt; myAction = DoWork;
&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;//var myBkTask = new Task(myAction, myFlag);
&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myBkTask&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;delegate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DoWork&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myFlag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;myBkTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;nf&quot;&gt;LogMsg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Main thread worker waiting&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;myFlag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WaitOne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;LogMsg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Main thread worker completed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


        &lt;span class=&quot;c1&quot;&gt;// Main
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// Start up a background worker test instance
&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testWkr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TasksTester&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;testWkr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;RunTest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The output is-&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;19:05:47.041 ThreadId=1, Main thread worker waiting
19:05:47.060 ThreadId=3, Background worker starting
19:05:49.108 ThreadId=3, Background worker completed
19:05:49.108 ThreadId=1, Main thread worker completed
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Sat, 26 Dec 2015 00:00:00 +0800</pubDate>
        <link>http://patrickleungwl.github.io//tech/2015/12/26/tasks/</link>
        <guid isPermaLink="true">http://patrickleungwl.github.io//tech/2015/12/26/tasks/</guid>
        
        <category>patterns</category>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>Using AutoResetEvent</title>
        <description>&lt;p&gt;Testing AutoResetEvent today.&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;TestAutoResetEvent&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AutoResetEventTester&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LogMsg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{0} ThreadId={1} &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;HH:MM:ss.fff&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CurrentThread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ManagedThreadId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


        &lt;span class=&quot;c1&quot;&gt;// LongComputeTask
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;//
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// Function run by background worker.
&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LongComputeTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stateInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;LogMsg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;LongComputeTask starting&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;percentDone&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.0f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;++)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;percentDone&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10.0f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;nf&quot;&gt;LogMsg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;LongComputeTask {0:0.0f}% completed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;percentDone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;LogMsg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;LongComputeTask completed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;AutoResetEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myFlag&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stateInfo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AutoResetEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myFlag&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;myFlag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


        &lt;span class=&quot;c1&quot;&gt;// RunTest
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;//
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// Function run by main thread
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// Main thread sets up the background thread
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// and fires it off
&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RunTest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myFlag&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AutoResetEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ThreadPool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;QueueUserWorkItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;WaitCallback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LongComputeTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myFlag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;myFlag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;WaitOne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;



        &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AutoResetEventTester&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;tester&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;RunTest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The output-&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;19:05:51.698 ThreadId=3 LongComputeTask starting
19:05:52.232 ThreadId=3 LongComputeTask 10.0f% completed
19:05:52.732 ThreadId=3 LongComputeTask 20.0f% completed
19:05:53.232 ThreadId=3 LongComputeTask 30.0f% completed
19:05:53.738 ThreadId=3 LongComputeTask 40.0f% completed
19:05:54.238 ThreadId=3 LongComputeTask 50.0f% completed
19:05:54.738 ThreadId=3 LongComputeTask 60.0f% completed
19:05:55.240 ThreadId=3 LongComputeTask 70.0f% completed
19:05:55.740 ThreadId=3 LongComputeTask 80.0f% completed
19:05:56.240 ThreadId=3 LongComputeTask 90.0f% completed
19:05:56.740 ThreadId=3 LongComputeTask 100.0f% completed
19:05:56.740 ThreadId=3 LongComputeTask completed
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Fri, 25 Dec 2015 00:00:00 +0800</pubDate>
        <link>http://patrickleungwl.github.io//tech/2015/12/25/autoresetevent/</link>
        <guid isPermaLink="true">http://patrickleungwl.github.io//tech/2015/12/25/autoresetevent/</guid>
        
        <category>patterns</category>
        
        
        <category>tech</category>
        
      </item>
    
  </channel>
</rss>
